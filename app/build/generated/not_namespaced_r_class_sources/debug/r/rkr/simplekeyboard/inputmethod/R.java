/* AUTO-GENERATED FILE. DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found. It
 * should not be modified by hand.
 */

package rkr.simplekeyboard.inputmethod;

public final class R {
  public static final class anim {
    public static final int key_preview_dismiss_lxx=0x7f010000;
    public static final int language_on_spacebar_fadeout=0x7f010001;
  }
  public static final class array {
    public static final int keyboard_theme_colors=0x7f020000;
    public static final int keyboard_theme_ids=0x7f020001;
    public static final int keyboard_theme_names=0x7f020002;
    public static final int keypress_vibration_durations=0x7f020003;
    public static final int keypress_volumes=0x7f020004;
    public static final int locale_and_extra_value_to_keyboard_layout_set_map=0x7f020005;
    public static final int predefined_layout_display_names=0x7f020006;
    public static final int predefined_layouts=0x7f020007;
    public static final int predefined_subtypes=0x7f020008;
    public static final int subtype_locale_displayed_in_root_locale=0x7f020009;
    public static final int subtype_locale_exception_keys=0x7f02000a;
  }
  public static final class attr {
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int additionalMoreKeys=0x7f030000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int allowRedundantMoreKeys=0x7f030001;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int altCode=0x7f030002;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int altCodeKeyWhileTypingFadeinAnimator=0x7f030003;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int altCodeKeyWhileTypingFadeoutAnimator=0x7f030004;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int backgroundDimAlpha=0x7f030005;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>action</td><td>5</td><td></td></tr>
     * <tr><td>empty</td><td>0</td><td></td></tr>
     * <tr><td>functional</td><td>2</td><td></td></tr>
     * <tr><td>normal</td><td>1</td><td></td></tr>
     * <tr><td>spacebar</td><td>6</td><td></td></tr>
     * <tr><td>stickyOff</td><td>3</td><td></td></tr>
     * <tr><td>stickyOn</td><td>4</td><td></td></tr>
     * </table>
     */
    public static final int backgroundType=0x7f030006;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int clobberSettingsKey=0x7f030007;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int codesArray=0x7f030008;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int countryCode=0x7f030009;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int elementKeyboard=0x7f03000a;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>alphabet</td><td>0</td><td></td></tr>
     * <tr><td>alphabetAutomaticShifted</td><td>2</td><td></td></tr>
     * <tr><td>alphabetManualShifted</td><td>1</td><td></td></tr>
     * <tr><td>alphabetShiftLockShifted</td><td>4</td><td></td></tr>
     * <tr><td>alphabetShiftLocked</td><td>3</td><td></td></tr>
     * <tr><td>number</td><td>9</td><td></td></tr>
     * <tr><td>phone</td><td>7</td><td></td></tr>
     * <tr><td>phoneSymbols</td><td>8</td><td></td></tr>
     * <tr><td>symbols</td><td>5</td><td></td></tr>
     * <tr><td>symbolsShifted</td><td>6</td><td></td></tr>
     * </table>
     */
    public static final int elementName=0x7f03000b;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int enableProximityCharsCorrection=0x7f03000c;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int functionalKeyBackground=0x7f03000d;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int functionalTextColor=0x7f03000e;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int hasShortcutKey=0x7f03000f;
    /**
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int horizontalGap=0x7f030010;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int iconDeleteKey=0x7f030011;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int iconDoneKey=0x7f030012;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int iconEnterKey=0x7f030013;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int iconGoKey=0x7f030014;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int iconLanguageSwitchKey=0x7f030015;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int iconNextKey=0x7f030016;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int iconPreviousKey=0x7f030017;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int iconSearchKey=0x7f030018;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int iconSendKey=0x7f030019;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int iconSettingsKey=0x7f03001a;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int iconShiftKey=0x7f03001b;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int iconShiftKeyShifted=0x7f03001c;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int iconSpaceKey=0x7f03001d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int iconSpaceKeyForNumberLayout=0x7f03001e;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int iconTabKey=0x7f03001f;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int iconZwjKey=0x7f030020;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int iconZwnjKey=0x7f030021;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int ignoreAltCodeKeyTimeout=0x7f030022;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>actionCustomLabel</td><td>100</td><td></td></tr>
     * <tr><td>actionDone</td><td>6</td><td></td></tr>
     * <tr><td>actionGo</td><td>2</td><td></td></tr>
     * <tr><td>actionNext</td><td>5</td><td></td></tr>
     * <tr><td>actionNone</td><td>1</td><td></td></tr>
     * <tr><td>actionPrevious</td><td>7</td><td></td></tr>
     * <tr><td>actionSearch</td><td>3</td><td></td></tr>
     * <tr><td>actionSend</td><td>4</td><td></td></tr>
     * <tr><td>actionUnspecified</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int imeAction=0x7f030023;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int inputViewStyle=0x7f030024;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int isIconDefined=0x7f030025;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int isMultiLine=0x7f030026;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>altCodeWhileTyping</td><td>4</td><td></td></tr>
     * <tr><td>enableLongPress</td><td>8</td><td></td></tr>
     * <tr><td>isRepeatable</td><td>1</td><td></td></tr>
     * <tr><td>noKeyPreview</td><td>2</td><td></td></tr>
     * </table>
     */
    public static final int keyActionFlags=0x7f030027;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int keyBackground=0x7f030028;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int keyHintLabel=0x7f030029;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int keyHintLabelColor=0x7f03002a;
    /**
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int keyHintLabelOffCenterRatio=0x7f03002b;
    /**
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int keyHintLabelRatio=0x7f03002c;
    /**
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int keyHintLabelVerticalAdjustment=0x7f03002d;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int keyHintLetterColor=0x7f03002e;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int keyHintLetterPadding=0x7f03002f;
    /**
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int keyHintLetterRatio=0x7f030030;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int keyHysteresisDistance=0x7f030031;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int keyHysteresisDistanceForSlidingModifier=0x7f030032;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int keyIconDisabled=0x7f030033;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>alignHintLabelToBottom</td><td>2</td><td></td></tr>
     * <tr><td>alignIconToBottom</td><td>4</td><td></td></tr>
     * <tr><td>alignLabelOffCenter</td><td>8</td><td></td></tr>
     * <tr><td>autoScale</td><td>c000</td><td></td></tr>
     * <tr><td>autoXScale</td><td>4000</td><td></td></tr>
     * <tr><td>disableAdditionalMoreKeys</td><td>80000000</td><td></td></tr>
     * <tr><td>disableKeyHintLabel</td><td>40000000</td><td></td></tr>
     * <tr><td>followFunctionalTextColor</td><td>80000</td><td></td></tr>
     * <tr><td>followKeyHintLabelRatio</td><td>140</td><td></td></tr>
     * <tr><td>followKeyLabelRatio</td><td>c0</td><td></td></tr>
     * <tr><td>followKeyLargeLetterRatio</td><td>40</td><td></td></tr>
     * <tr><td>followKeyLetterRatio</td><td>80</td><td></td></tr>
     * <tr><td>fontDefault</td><td>30</td><td></td></tr>
     * <tr><td>fontMonoSpace</td><td>20</td><td></td></tr>
     * <tr><td>fontNormal</td><td>10</td><td></td></tr>
     * <tr><td>fromCustomActionLabel</td><td>40000</td><td></td></tr>
     * <tr><td>hasHintLabel</td><td>800</td><td></td></tr>
     * <tr><td>hasPopupHint</td><td>200</td><td></td></tr>
     * <tr><td>hasShiftedLetterHint</td><td>400</td><td></td></tr>
     * <tr><td>preserveCase</td><td>10000</td><td></td></tr>
     * <tr><td>shiftedLetterActivated</td><td>20000</td><td></td></tr>
     * </table>
     */
    public static final int keyLabelFlags=0x7f030034;
    /**
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int keyLabelOffCenterRatio=0x7f030035;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int keyLabelSize=0x7f030036;
    /**
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int keyLargeLetterRatio=0x7f030037;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int keyLetterSize=0x7f030038;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int keyPreviewBackground=0x7f030039;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int keyPreviewDismissAnimator=0x7f03003a;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int keyPreviewHeight=0x7f03003b;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int keyPreviewLingerTimeout=0x7f03003c;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int keyPreviewOffset=0x7f03003d;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int keyPreviewTextColor=0x7f03003e;
    /**
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int keyPreviewTextRatio=0x7f03003f;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int keyRepeatInterval=0x7f030040;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int keyRepeatStartTimeout=0x7f030041;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int keySelectionByDraggingFinger=0x7f030042;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int keyShiftedLetterHintActivatedColor=0x7f030043;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int keyShiftedLetterHintInactivatedColor=0x7f030044;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int keyShiftedLetterHintPadding=0x7f030045;
    /**
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int keyShiftedLetterHintRatio=0x7f030046;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int keySpec=0x7f030047;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int keyStyle=0x7f030048;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int keyTextColor=0x7f030049;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int keyTextInactivatedColor=0x7f03004a;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int keyTextShadowColor=0x7f03004b;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int keyTextShadowRadius=0x7f03004c;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bold</td><td>1</td><td></td></tr>
     * <tr><td>boldItalic</td><td>3</td><td></td></tr>
     * <tr><td>italic</td><td>2</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int keyTypeface=0x7f03004d;
    /**
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fillRight</td><td>ffffffff</td><td></td></tr>
     * </table>
     */
    public static final int keyWidth=0x7f03004e;
    /**
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int keyXPos=0x7f03004f;
    /**
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int keyboardBottomPadding=0x7f030050;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int keyboardLayout=0x7f030051;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int keyboardLayoutSet=0x7f030052;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>alphabet</td><td>0</td><td></td></tr>
     * <tr><td>alphabetAutomaticShifted</td><td>2</td><td></td></tr>
     * <tr><td>alphabetManualShifted</td><td>1</td><td></td></tr>
     * <tr><td>alphabetShiftLockShifted</td><td>4</td><td></td></tr>
     * <tr><td>alphabetShiftLocked</td><td>3</td><td></td></tr>
     * <tr><td>number</td><td>9</td><td></td></tr>
     * <tr><td>phone</td><td>7</td><td></td></tr>
     * <tr><td>phoneSymbols</td><td>8</td><td></td></tr>
     * <tr><td>symbols</td><td>5</td><td></td></tr>
     * <tr><td>symbolsShifted</td><td>6</td><td></td></tr>
     * </table>
     */
    public static final int keyboardLayoutSetElement=0x7f030053;
    /**
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int keyboardLeftPadding=0x7f030054;
    /**
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int keyboardRightPadding=0x7f030055;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int keyboardStyle=0x7f030056;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>LXXDark</td><td>4</td><td></td></tr>
     * <tr><td>LXXDarkBorder</td><td>2</td><td></td></tr>
     * <tr><td>LXXLight</td><td>3</td><td></td></tr>
     * <tr><td>LXXLightBorder</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int keyboardTheme=0x7f030057;
    /**
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int keyboardTopPadding=0x7f030058;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int keyboardViewStyle=0x7f030059;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int languageCode=0x7f03005a;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int languageOnSpacebarFadeoutAnimator=0x7f03005b;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int languageOnSpacebarFinalAlpha=0x7f03005c;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int languageOnSpacebarTextColor=0x7f03005d;
    /**
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int languageOnSpacebarTextRatio=0x7f03005e;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int languageSwitchKeyEnabled=0x7f03005f;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int localeCode=0x7f030060;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int longPressShiftLockTimeout=0x7f030061;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int mainKeyboardViewStyle=0x7f030062;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int maxMoreKeysColumn=0x7f030063;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int maxValue=0x7f030064;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int minValue=0x7f030065;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>email</td><td>2</td><td></td></tr>
     * <tr><td>im</td><td>3</td><td></td></tr>
     * <tr><td>number</td><td>5</td><td></td></tr>
     * <tr><td>phone</td><td>4</td><td></td></tr>
     * <tr><td>text</td><td>0</td><td></td></tr>
     * <tr><td>url</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int mode=0x7f030066;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int moreKeys=0x7f030067;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int moreKeysKeyboardLayout=0x7f030068;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int moreKeysKeyboardStyle=0x7f030069;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int moreKeysKeyboardViewStyle=0x7f03006a;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int moreKeysTemplate=0x7f03006b;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int navigateNext=0x7f03006c;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int navigatePrevious=0x7f03006d;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int parentStyle=0x7f03006e;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int passwordInput=0x7f03006f;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int rowHeight=0x7f030070;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int showExtraChars=0x7f030071;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int showMoreKeysKeyboardAtTouchedPoint=0x7f030072;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int showNumberRow=0x7f030073;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int slidingKeyInputPreviewBodyRatio=0x7f030074;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int slidingKeyInputPreviewColor=0x7f030075;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int slidingKeyInputPreviewShadowRatio=0x7f030076;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int slidingKeyInputPreviewWidth=0x7f030077;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int spacebarBackground=0x7f030078;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int spacebarIconWidthRatio=0x7f030079;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int stepValue=0x7f03007a;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int styleName=0x7f03007b;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textsArray=0x7f03007c;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>LXXDark</td><td>4</td><td></td></tr>
     * <tr><td>LXXDarkBorder</td><td>2</td><td></td></tr>
     * <tr><td>LXXLight</td><td>3</td><td></td></tr>
     * <tr><td>LXXLightBorder</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int themeId=0x7f03007d;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int touchNoiseThresholdDistance=0x7f03007e;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int touchNoiseThresholdTime=0x7f03007f;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int verticalCorrection=0x7f030080;
    /**
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int verticalGap=0x7f030081;
    /**
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int visualInsetsLeft=0x7f030082;
    /**
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int visualInsetsRight=0x7f030083;
  }
  public static final class bool {
    public static final int config_default_key_preview_popup=0x7f040000;
    public static final int config_default_sound_enabled=0x7f040001;
    public static final int config_default_vibration_enabled=0x7f040002;
    public static final int config_enable_show_key_preview_popup_option=0x7f040003;
    public static final int config_key_selection_by_dragging_finger=0x7f040004;
    public static final int config_show_more_keys_keyboard_at_touched_point=0x7f040005;
    public static final int config_use_fullscreen_mode=0x7f040006;
  }
  public static final class color {
    public static final int key_background_pressed_lxx_dark=0x7f050000;
    public static final int key_background_pressed_lxx_light=0x7f050001;
    public static final int key_functional_text_color_lxx_dark=0x7f050002;
    public static final int key_functional_text_color_lxx_light=0x7f050003;
    public static final int key_hint_letter_color_lxx_dark=0x7f050004;
    public static final int key_hint_letter_color_lxx_light=0x7f050005;
    public static final int key_text_color_lxx_dark=0x7f050006;
    public static final int key_text_color_lxx_light=0x7f050007;
    public static final int key_text_inactive_color_lxx_dark=0x7f050008;
    public static final int key_text_inactive_color_lxx_light=0x7f050009;
    public static final int language_on_spacebar_text_color_lxx_light=0x7f05000a;
    public static final int sliding_key_input_preview_color_lxx_dark=0x7f05000b;
    public static final int sliding_key_input_preview_color_lxx_light=0x7f05000c;
  }
  public static final class dimen {
    public static final int config_default_keyboard_height=0x7f060000;
    public static final int config_key_hint_letter_padding=0x7f060001;
    public static final int config_key_hysteresis_distance=0x7f060002;
    public static final int config_key_hysteresis_distance_for_sliding_modifier=0x7f060003;
    public static final int config_key_preview_height_lxx=0x7f060004;
    public static final int config_key_preview_offset_lxx=0x7f060005;
    public static final int config_key_shifted_letter_hint_padding=0x7f060006;
    public static final int config_keyboard_vertical_correction=0x7f060007;
    public static final int config_language_on_spacebar_horizontal_margin=0x7f060008;
    public static final int config_more_keys_keyboard_key_height=0x7f060009;
    public static final int config_more_keys_keyboard_key_horizontal_padding=0x7f06000a;
    public static final int config_more_keys_keyboard_slide_allowance=0x7f06000b;
    public static final int config_more_keys_keyboard_vertical_correction_holo=0x7f06000c;
    public static final int config_sliding_key_input_preview_width=0x7f06000d;
    public static final int config_touch_noise_threshold_distance=0x7f06000e;
  }
  public static final class drawable {
    public static final int btn_keyboard_key_function_lxx_dark_border=0x7f070000;
    public static final int btn_keyboard_key_function_lxx_light_border=0x7f070001;
    public static final int btn_keyboard_key_functional_lxx_dark=0x7f070002;
    public static final int btn_keyboard_key_functional_lxx_dark_border=0x7f070003;
    public static final int btn_keyboard_key_functional_lxx_light=0x7f070004;
    public static final int btn_keyboard_key_functional_lxx_light_border=0x7f070005;
    public static final int btn_keyboard_key_lxx_dark=0x7f070006;
    public static final int btn_keyboard_key_lxx_dark_border=0x7f070007;
    public static final int btn_keyboard_key_lxx_light=0x7f070008;
    public static final int btn_keyboard_key_lxx_light_border=0x7f070009;
    public static final int btn_keyboard_key_normal_lxx_dark_border=0x7f07000a;
    public static final int btn_keyboard_key_normal_lxx_light_border=0x7f07000b;
    public static final int btn_keyboard_key_popup_lxx_dark=0x7f07000c;
    public static final int btn_keyboard_key_popup_lxx_light=0x7f07000d;
    public static final int btn_keyboard_key_popup_selected_lxx_dark=0x7f07000e;
    public static final int btn_keyboard_key_popup_selected_lxx_light=0x7f07000f;
    public static final int btn_keyboard_key_pressed_lxx_dark_border=0x7f070010;
    public static final int btn_keyboard_key_pressed_lxx_light_border=0x7f070011;
    public static final int btn_keyboard_spacebar_lxx_dark=0x7f070012;
    public static final int btn_keyboard_spacebar_lxx_light=0x7f070013;
    public static final int btn_keyboard_spacebar_normal_lxx_dark=0x7f070014;
    public static final int btn_keyboard_spacebar_normal_lxx_light=0x7f070015;
    public static final int btn_keyboard_spacebar_pressed_lxx_dark=0x7f070016;
    public static final int btn_keyboard_spacebar_pressed_lxx_light=0x7f070017;
    public static final int ic_add_circle_white_24dp=0x7f070018;
    public static final int ic_ime_switcher_dark=0x7f070019;
    public static final int ic_launcher_keyboard=0x7f07001a;
    public static final int keyboard_key_feedback_background_lxx_dark=0x7f07001b;
    public static final int keyboard_key_feedback_background_lxx_light=0x7f07001c;
    public static final int keyboard_popup_panel_background_lxx_dark=0x7f07001d;
    public static final int keyboard_popup_panel_background_lxx_light=0x7f07001e;
    public static final int sym_keyboard_delete_lxx_dark=0x7f07001f;
    public static final int sym_keyboard_delete_lxx_light=0x7f070020;
    public static final int sym_keyboard_done_lxx_dark=0x7f070021;
    public static final int sym_keyboard_done_lxx_light=0x7f070022;
    public static final int sym_keyboard_go_lxx_dark=0x7f070023;
    public static final int sym_keyboard_go_lxx_light=0x7f070024;
    public static final int sym_keyboard_language_switch_lxx_dark=0x7f070025;
    public static final int sym_keyboard_language_switch_lxx_light=0x7f070026;
    public static final int sym_keyboard_next_lxx_dark=0x7f070027;
    public static final int sym_keyboard_next_lxx_light=0x7f070028;
    public static final int sym_keyboard_previous_lxx_dark=0x7f070029;
    public static final int sym_keyboard_previous_lxx_light=0x7f07002a;
    public static final int sym_keyboard_return_lxx_dark=0x7f07002b;
    public static final int sym_keyboard_return_lxx_light=0x7f07002c;
    public static final int sym_keyboard_search_lxx_dark=0x7f07002d;
    public static final int sym_keyboard_search_lxx_light=0x7f07002e;
    public static final int sym_keyboard_send_lxx_dark=0x7f07002f;
    public static final int sym_keyboard_send_lxx_light=0x7f070030;
    public static final int sym_keyboard_settings_lxx_dark=0x7f070031;
    public static final int sym_keyboard_settings_lxx_light=0x7f070032;
    public static final int sym_keyboard_shift_locked_lxx_dark=0x7f070033;
    public static final int sym_keyboard_shift_locked_lxx_light=0x7f070034;
    public static final int sym_keyboard_shift_lxx_dark=0x7f070035;
    public static final int sym_keyboard_shift_lxx_light=0x7f070036;
    public static final int sym_keyboard_space_lxx_dark=0x7f070037;
    public static final int sym_keyboard_space_lxx_light=0x7f070038;
    public static final int sym_keyboard_tab_lxx_dark=0x7f070039;
    public static final int sym_keyboard_tab_lxx_light=0x7f07003a;
    public static final int sym_keyboard_zwj_lxx_dark=0x7f07003b;
    public static final int sym_keyboard_zwj_lxx_light=0x7f07003c;
    public static final int sym_keyboard_zwnj_lxx_dark=0x7f07003d;
    public static final int sym_keyboard_zwnj_lxx_light=0x7f07003e;
  }
  public static final class fraction {
    public static final int config_key_hint_label_ratio_lxx=0x7f080000;
    public static final int config_key_hint_letter_ratio_lxx=0x7f080001;
    public static final int config_key_horizontal_gap_holo=0x7f080002;
    public static final int config_key_label_ratio_lxx=0x7f080003;
    public static final int config_key_large_letter_ratio_lxx=0x7f080004;
    public static final int config_key_letter_ratio_5row=0x7f080005;
    public static final int config_key_letter_ratio_lxx=0x7f080006;
    public static final int config_key_preview_text_ratio=0x7f080007;
    public static final int config_key_shifted_letter_hint_ratio_5row=0x7f080008;
    public static final int config_key_shifted_letter_hint_ratio_lxx=0x7f080009;
    public static final int config_key_vertical_gap_5row=0x7f08000a;
    public static final int config_key_vertical_gap_holo=0x7f08000b;
    public static final int config_keyboard_bottom_padding_holo=0x7f08000c;
    public static final int config_keyboard_left_padding=0x7f08000d;
    public static final int config_keyboard_right_padding=0x7f08000e;
    public static final int config_keyboard_top_padding_holo=0x7f08000f;
    public static final int config_language_on_spacebar_text_ratio=0x7f080010;
    public static final int config_max_keyboard_height=0x7f080011;
    public static final int config_min_keyboard_height=0x7f080012;
  }
  public static final class id {
    public static final int LXXDark=0x7f090000;
    public static final int LXXDarkBorder=0x7f090001;
    public static final int LXXLight=0x7f090002;
    public static final int LXXLightBorder=0x7f090003;
    public static final int action=0x7f090004;
    public static final int actionCustomLabel=0x7f090005;
    public static final int actionDone=0x7f090006;
    public static final int actionGo=0x7f090007;
    public static final int actionNext=0x7f090008;
    public static final int actionNone=0x7f090009;
    public static final int actionPrevious=0x7f09000a;
    public static final int actionSearch=0x7f09000b;
    public static final int actionSend=0x7f09000c;
    public static final int actionUnspecified=0x7f09000d;
    public static final int action_add_style=0x7f09000e;
    public static final int alignHintLabelToBottom=0x7f09000f;
    public static final int alignIconToBottom=0x7f090010;
    public static final int alignLabelOffCenter=0x7f090011;
    public static final int alphabet=0x7f090012;
    public static final int alphabetAutomaticShifted=0x7f090013;
    public static final int alphabetManualShifted=0x7f090014;
    public static final int alphabetShiftLockShifted=0x7f090015;
    public static final int alphabetShiftLocked=0x7f090016;
    public static final int altCodeWhileTyping=0x7f090017;
    public static final int autoScale=0x7f090018;
    public static final int autoXScale=0x7f090019;
    public static final int bold=0x7f09001a;
    public static final int boldItalic=0x7f09001b;
    public static final int disableAdditionalMoreKeys=0x7f09001c;
    public static final int disableKeyHintLabel=0x7f09001d;
    public static final int email=0x7f09001e;
    public static final int empty=0x7f09001f;
    public static final int enableLongPress=0x7f090020;
    public static final int fillRight=0x7f090021;
    public static final int followFunctionalTextColor=0x7f090022;
    public static final int followKeyHintLabelRatio=0x7f090023;
    public static final int followKeyLabelRatio=0x7f090024;
    public static final int followKeyLargeLetterRatio=0x7f090025;
    public static final int followKeyLetterRatio=0x7f090026;
    public static final int fontDefault=0x7f090027;
    public static final int fontMonoSpace=0x7f090028;
    public static final int fontNormal=0x7f090029;
    public static final int fromCustomActionLabel=0x7f09002a;
    public static final int functional=0x7f09002b;
    public static final int hasHintLabel=0x7f09002c;
    public static final int hasPopupHint=0x7f09002d;
    public static final int hasShiftedLetterHint=0x7f09002e;
    public static final int im=0x7f09002f;
    public static final int isRepeatable=0x7f090030;
    public static final int italic=0x7f090031;
    public static final int keyboard_layout_set_spinner=0x7f090032;
    public static final int keyboard_view=0x7f090033;
    public static final int main_keyboard_frame=0x7f090034;
    public static final int more_keys_keyboard_view=0x7f090035;
    public static final int noKeyPreview=0x7f090036;
    public static final int normal=0x7f090037;
    public static final int number=0x7f090038;
    public static final int phone=0x7f090039;
    public static final int phoneSymbols=0x7f09003a;
    public static final int preserveCase=0x7f09003b;
    public static final int radio_button=0x7f09003c;
    public static final int seek_bar_dialog_bar=0x7f09003d;
    public static final int seek_bar_dialog_bar_blue=0x7f09003e;
    public static final int seek_bar_dialog_bar_green=0x7f09003f;
    public static final int seek_bar_dialog_bar_red=0x7f090040;
    public static final int seek_bar_dialog_value=0x7f090041;
    public static final int shiftedLetterActivated=0x7f090042;
    public static final int spacebar=0x7f090043;
    public static final int stickyOff=0x7f090044;
    public static final int stickyOn=0x7f090045;
    public static final int subtype_locale_spinner=0x7f090046;
    public static final int symbols=0x7f090047;
    public static final int symbolsShifted=0x7f090048;
    public static final int text=0x7f090049;
    public static final int url=0x7f09004a;
  }
  public static final class integer {
    public static final int abbreviation_marker=0x7f0a0000;
    public static final int config_default_longpress_key_timeout=0x7f0a0001;
    public static final int config_delay_in_milliseconds_to_update_shift_state=0x7f0a0002;
    public static final int config_ignore_alt_code_key_timeout=0x7f0a0003;
    public static final int config_key_preview_linger_timeout=0x7f0a0004;
    public static final int config_key_repeat_interval=0x7f0a0005;
    public static final int config_key_repeat_start_timeout=0x7f0a0006;
    public static final int config_keyboar_height_step=0x7f0a0007;
    public static final int config_keyboard_grid_height=0x7f0a0008;
    public static final int config_keyboard_grid_width=0x7f0a0009;
    public static final int config_language_on_spacebar_final_alpha=0x7f0a000a;
    public static final int config_longpress_shift_lock_timeout=0x7f0a000b;
    public static final int config_longpress_timeout_step=0x7f0a000c;
    public static final int config_max_keyboar_height=0x7f0a000d;
    public static final int config_max_longpress_timeout=0x7f0a000e;
    public static final int config_max_more_keys_column=0x7f0a000f;
    public static final int config_max_vibration_duration=0x7f0a0010;
    public static final int config_min_keyboar_height=0x7f0a0011;
    public static final int config_min_longpress_timeout=0x7f0a0012;
    public static final int config_screen_metrics=0x7f0a0013;
    public static final int config_sliding_key_input_preview_body_ratio=0x7f0a0014;
    public static final int config_sliding_key_input_preview_shadow_ratio=0x7f0a0015;
    public static final int config_touch_noise_threshold_time=0x7f0a0016;
    public static final int sentence_separator=0x7f0a0017;
  }
  public static final class layout {
    public static final int additional_subtype_dialog=0x7f0b0000;
    public static final int color_dialog=0x7f0b0001;
    public static final int input_view=0x7f0b0002;
    public static final int main_keyboard_frame=0x7f0b0003;
    public static final int more_keys_keyboard=0x7f0b0004;
    public static final int radio_button_preference_widget=0x7f0b0005;
    public static final int seek_bar_dialog=0x7f0b0006;
  }
  public static final class menu {
    public static final int add_style=0x7f0c0000;
  }
  public static final class string {
    public static final int abbreviation_unit_milliseconds=0x7f0d0000;
    public static final int abbreviation_unit_percent=0x7f0d0001;
    public static final int add=0x7f0d0002;
    public static final int add_style=0x7f0d0003;
    public static final int auto_cap=0x7f0d0004;
    public static final int auto_cap_summary=0x7f0d0005;
    public static final int button_default=0x7f0d0006;
    public static final int custom_input_style_already_exists=0x7f0d0007;
    public static final int custom_input_style_note_message=0x7f0d0008;
    public static final int custom_input_styles_title=0x7f0d0009;
    public static final int delete_swipe=0x7f0d000a;
    public static final int enable=0x7f0d000b;
    public static final int english_ime_input_options=0x7f0d000c;
    public static final int english_ime_name=0x7f0d000d;
    public static final int english_ime_settings=0x7f0d000e;
    public static final int hide_language_switch_key=0x7f0d000f;
    public static final int hide_launcher=0x7f0d0010;
    public static final int hide_special_chars=0x7f0d0011;
    public static final int keyboard_color=0x7f0d0012;
    public static final int keyboard_layout_set=0x7f0d0013;
    public static final int keyboard_theme_dark=0x7f0d0014;
    public static final int keyboard_theme_dark_border=0x7f0d0015;
    public static final int keyboard_theme_light=0x7f0d0016;
    public static final int keyboard_theme_light_border=0x7f0d0017;
    public static final int label_pause_key=0x7f0d0018;
    public static final int label_wait_key=0x7f0d0019;
    public static final int language_selection_title=0x7f0d001a;
    public static final int matching_navbar_color=0x7f0d001b;
    public static final int not_now=0x7f0d001c;
    public static final int popup_on_keypress=0x7f0d001d;
    public static final int prefs_key_longpress_timeout_settings=0x7f0d001e;
    public static final int prefs_keyboard_height_settings=0x7f0d001f;
    public static final int prefs_keypress_sound_volume_settings=0x7f0d0020;
    public static final int prefs_keypress_vibration_duration_settings=0x7f0d0021;
    public static final int remove=0x7f0d0022;
    public static final int save=0x7f0d0023;
    public static final int select_language=0x7f0d0024;
    public static final int settings_screen_advanced=0x7f0d0025;
    public static final int settings_screen_appearance=0x7f0d0026;
    public static final int settings_screen_preferences=0x7f0d0027;
    public static final int settings_screen_theme=0x7f0d0028;
    public static final int settings_system_default=0x7f0d0029;
    public static final int setup_message=0x7f0d002a;
    public static final int show_number_row=0x7f0d002b;
    public static final int sound_on_keypress=0x7f0d002c;
    public static final int space_swipe=0x7f0d002d;
    public static final int subtype_bulgarian_bds=0x7f0d002e;
    public static final int subtype_en_GB=0x7f0d002f;
    public static final int subtype_en_US=0x7f0d0030;
    public static final int subtype_es_US=0x7f0d0031;
    public static final int subtype_generic=0x7f0d0032;
    public static final int subtype_generic_abc=0x7f0d0033;
    public static final int subtype_generic_azerty=0x7f0d0034;
    public static final int subtype_generic_colemak=0x7f0d0035;
    public static final int subtype_generic_compact=0x7f0d0036;
    public static final int subtype_generic_dvorak=0x7f0d0037;
    public static final int subtype_generic_pcqwerty=0x7f0d0038;
    public static final int subtype_generic_qwerty=0x7f0d0039;
    public static final int subtype_generic_qwertz=0x7f0d003a;
    public static final int subtype_generic_traditional=0x7f0d003b;
    public static final int subtype_in_root_locale_hi_ZZ=0x7f0d003c;
    public static final int subtype_in_root_locale_sr_ZZ=0x7f0d003d;
    public static final int subtype_locale=0x7f0d003e;
    public static final int subtype_no_language=0x7f0d003f;
    public static final int subtype_no_language_qwerty=0x7f0d0040;
    public static final int subtype_sr_ZZ=0x7f0d0041;
    public static final int symbols_sentence_terminators=0x7f0d0042;
    public static final int symbols_word_separators=0x7f0d0043;
    public static final int vibrate_on_keypress=0x7f0d0044;
  }
  public static final class style {
    public static final int InputView=0x7f0e0000;
    public static final int Keyboard=0x7f0e0001;
    public static final int Keyboard_LXX_Dark=0x7f0e0002;
    public static final int Keyboard_LXX_Dark_Border=0x7f0e0003;
    public static final int Keyboard_LXX_Light=0x7f0e0004;
    public static final int Keyboard_LXX_Light_Border=0x7f0e0005;
    public static final int KeyboardIcons=0x7f0e0006;
    public static final int KeyboardIcons_LXX_Dark=0x7f0e0007;
    public static final int KeyboardIcons_LXX_Light=0x7f0e0008;
    public static final int KeyboardTheme_LXX_Dark=0x7f0e0009;
    public static final int KeyboardTheme_LXX_Dark_Border=0x7f0e000a;
    public static final int KeyboardTheme_LXX_Light=0x7f0e000b;
    public static final int KeyboardTheme_LXX_Light_Border=0x7f0e000c;
    public static final int KeyboardView=0x7f0e000d;
    public static final int KeyboardView_LXX_Dark=0x7f0e000e;
    public static final int KeyboardView_LXX_Dark_Border=0x7f0e000f;
    public static final int KeyboardView_LXX_Light=0x7f0e0010;
    public static final int KeyboardView_LXX_Light_Border=0x7f0e0011;
    public static final int MainKeyboardView=0x7f0e0012;
    public static final int MainKeyboardView_LXX_Dark=0x7f0e0013;
    public static final int MainKeyboardView_LXX_Dark_Border=0x7f0e0014;
    public static final int MainKeyboardView_LXX_Light=0x7f0e0015;
    public static final int MainKeyboardView_LXX_Light_Border=0x7f0e0016;
    public static final int MoreKeysKeyboard_LXX_Dark=0x7f0e0017;
    public static final int MoreKeysKeyboard_LXX_Light=0x7f0e0018;
    public static final int MoreKeysKeyboardView=0x7f0e0019;
    public static final int MoreKeysKeyboardView_LXX_Dark=0x7f0e001a;
    public static final int MoreKeysKeyboardView_LXX_Light=0x7f0e001b;
    public static final int additionalSubtypeSpinnerStyle=0x7f0e001c;
    public static final int platformDialogTheme=0x7f0e001d;
    public static final int platformSettingsTheme=0x7f0e001e;
  }
  public static final class styleable {
    /**
     * Attributes that can be used with a Keyboard.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Keyboard_horizontalGap rkr.simplekeyboard.inputmethod:horizontalGap}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_iconDeleteKey rkr.simplekeyboard.inputmethod:iconDeleteKey}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_iconDoneKey rkr.simplekeyboard.inputmethod:iconDoneKey}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_iconEnterKey rkr.simplekeyboard.inputmethod:iconEnterKey}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_iconGoKey rkr.simplekeyboard.inputmethod:iconGoKey}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_iconLanguageSwitchKey rkr.simplekeyboard.inputmethod:iconLanguageSwitchKey}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_iconNextKey rkr.simplekeyboard.inputmethod:iconNextKey}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_iconPreviousKey rkr.simplekeyboard.inputmethod:iconPreviousKey}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_iconSearchKey rkr.simplekeyboard.inputmethod:iconSearchKey}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_iconSendKey rkr.simplekeyboard.inputmethod:iconSendKey}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_iconSettingsKey rkr.simplekeyboard.inputmethod:iconSettingsKey}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_iconShiftKey rkr.simplekeyboard.inputmethod:iconShiftKey}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_iconShiftKeyShifted rkr.simplekeyboard.inputmethod:iconShiftKeyShifted}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_iconSpaceKey rkr.simplekeyboard.inputmethod:iconSpaceKey}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_iconSpaceKeyForNumberLayout rkr.simplekeyboard.inputmethod:iconSpaceKeyForNumberLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_iconTabKey rkr.simplekeyboard.inputmethod:iconTabKey}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_iconZwjKey rkr.simplekeyboard.inputmethod:iconZwjKey}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_iconZwnjKey rkr.simplekeyboard.inputmethod:iconZwnjKey}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_keyboardBottomPadding rkr.simplekeyboard.inputmethod:keyboardBottomPadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_keyboardLeftPadding rkr.simplekeyboard.inputmethod:keyboardLeftPadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_keyboardRightPadding rkr.simplekeyboard.inputmethod:keyboardRightPadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_keyboardTopPadding rkr.simplekeyboard.inputmethod:keyboardTopPadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_moreKeysTemplate rkr.simplekeyboard.inputmethod:moreKeysTemplate}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_rowHeight rkr.simplekeyboard.inputmethod:rowHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_themeId rkr.simplekeyboard.inputmethod:themeId}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_verticalGap rkr.simplekeyboard.inputmethod:verticalGap}</code></td><td></td></tr>
     * </table>
     * @see #Keyboard_horizontalGap
     * @see #Keyboard_iconDeleteKey
     * @see #Keyboard_iconDoneKey
     * @see #Keyboard_iconEnterKey
     * @see #Keyboard_iconGoKey
     * @see #Keyboard_iconLanguageSwitchKey
     * @see #Keyboard_iconNextKey
     * @see #Keyboard_iconPreviousKey
     * @see #Keyboard_iconSearchKey
     * @see #Keyboard_iconSendKey
     * @see #Keyboard_iconSettingsKey
     * @see #Keyboard_iconShiftKey
     * @see #Keyboard_iconShiftKeyShifted
     * @see #Keyboard_iconSpaceKey
     * @see #Keyboard_iconSpaceKeyForNumberLayout
     * @see #Keyboard_iconTabKey
     * @see #Keyboard_iconZwjKey
     * @see #Keyboard_iconZwnjKey
     * @see #Keyboard_keyboardBottomPadding
     * @see #Keyboard_keyboardLeftPadding
     * @see #Keyboard_keyboardRightPadding
     * @see #Keyboard_keyboardTopPadding
     * @see #Keyboard_moreKeysTemplate
     * @see #Keyboard_rowHeight
     * @see #Keyboard_themeId
     * @see #Keyboard_verticalGap
     */
    public static final int[] Keyboard={
      0x7f030010, 0x7f030011, 0x7f030012, 0x7f030013, 
      0x7f030014, 0x7f030015, 0x7f030016, 0x7f030017, 
      0x7f030018, 0x7f030019, 0x7f03001a, 0x7f03001b, 
      0x7f03001c, 0x7f03001d, 0x7f03001e, 0x7f03001f, 
      0x7f030020, 0x7f030021, 0x7f030050, 0x7f030054, 
      0x7f030055, 0x7f030058, 0x7f03006b, 0x7f030070, 
      0x7f03007d, 0x7f030081
    };
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#horizontalGap}
     * attribute's value can be found in the {@link #Keyboard} array.
     *
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name rkr.simplekeyboard.inputmethod:horizontalGap
     */
    public static final int Keyboard_horizontalGap=0;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#iconDeleteKey}
     * attribute's value can be found in the {@link #Keyboard} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:iconDeleteKey
     */
    public static final int Keyboard_iconDeleteKey=1;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#iconDoneKey}
     * attribute's value can be found in the {@link #Keyboard} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:iconDoneKey
     */
    public static final int Keyboard_iconDoneKey=2;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#iconEnterKey}
     * attribute's value can be found in the {@link #Keyboard} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:iconEnterKey
     */
    public static final int Keyboard_iconEnterKey=3;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#iconGoKey}
     * attribute's value can be found in the {@link #Keyboard} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:iconGoKey
     */
    public static final int Keyboard_iconGoKey=4;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#iconLanguageSwitchKey}
     * attribute's value can be found in the {@link #Keyboard} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:iconLanguageSwitchKey
     */
    public static final int Keyboard_iconLanguageSwitchKey=5;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#iconNextKey}
     * attribute's value can be found in the {@link #Keyboard} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:iconNextKey
     */
    public static final int Keyboard_iconNextKey=6;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#iconPreviousKey}
     * attribute's value can be found in the {@link #Keyboard} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:iconPreviousKey
     */
    public static final int Keyboard_iconPreviousKey=7;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#iconSearchKey}
     * attribute's value can be found in the {@link #Keyboard} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:iconSearchKey
     */
    public static final int Keyboard_iconSearchKey=8;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#iconSendKey}
     * attribute's value can be found in the {@link #Keyboard} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:iconSendKey
     */
    public static final int Keyboard_iconSendKey=9;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#iconSettingsKey}
     * attribute's value can be found in the {@link #Keyboard} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:iconSettingsKey
     */
    public static final int Keyboard_iconSettingsKey=10;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#iconShiftKey}
     * attribute's value can be found in the {@link #Keyboard} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:iconShiftKey
     */
    public static final int Keyboard_iconShiftKey=11;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#iconShiftKeyShifted}
     * attribute's value can be found in the {@link #Keyboard} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:iconShiftKeyShifted
     */
    public static final int Keyboard_iconShiftKeyShifted=12;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#iconSpaceKey}
     * attribute's value can be found in the {@link #Keyboard} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:iconSpaceKey
     */
    public static final int Keyboard_iconSpaceKey=13;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#iconSpaceKeyForNumberLayout}
     * attribute's value can be found in the {@link #Keyboard} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:iconSpaceKeyForNumberLayout
     */
    public static final int Keyboard_iconSpaceKeyForNumberLayout=14;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#iconTabKey}
     * attribute's value can be found in the {@link #Keyboard} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:iconTabKey
     */
    public static final int Keyboard_iconTabKey=15;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#iconZwjKey}
     * attribute's value can be found in the {@link #Keyboard} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:iconZwjKey
     */
    public static final int Keyboard_iconZwjKey=16;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#iconZwnjKey}
     * attribute's value can be found in the {@link #Keyboard} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:iconZwnjKey
     */
    public static final int Keyboard_iconZwnjKey=17;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#keyboardBottomPadding}
     * attribute's value can be found in the {@link #Keyboard} array.
     *
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name rkr.simplekeyboard.inputmethod:keyboardBottomPadding
     */
    public static final int Keyboard_keyboardBottomPadding=18;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#keyboardLeftPadding}
     * attribute's value can be found in the {@link #Keyboard} array.
     *
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name rkr.simplekeyboard.inputmethod:keyboardLeftPadding
     */
    public static final int Keyboard_keyboardLeftPadding=19;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#keyboardRightPadding}
     * attribute's value can be found in the {@link #Keyboard} array.
     *
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name rkr.simplekeyboard.inputmethod:keyboardRightPadding
     */
    public static final int Keyboard_keyboardRightPadding=20;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#keyboardTopPadding}
     * attribute's value can be found in the {@link #Keyboard} array.
     *
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name rkr.simplekeyboard.inputmethod:keyboardTopPadding
     */
    public static final int Keyboard_keyboardTopPadding=21;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#moreKeysTemplate}
     * attribute's value can be found in the {@link #Keyboard} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:moreKeysTemplate
     */
    public static final int Keyboard_moreKeysTemplate=22;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#rowHeight}
     * attribute's value can be found in the {@link #Keyboard} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name rkr.simplekeyboard.inputmethod:rowHeight
     */
    public static final int Keyboard_rowHeight=23;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#themeId}
     * attribute's value can be found in the {@link #Keyboard} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>LXXDark</td><td>4</td><td></td></tr>
     * <tr><td>LXXDarkBorder</td><td>2</td><td></td></tr>
     * <tr><td>LXXLight</td><td>3</td><td></td></tr>
     * <tr><td>LXXLightBorder</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name rkr.simplekeyboard.inputmethod:themeId
     */
    public static final int Keyboard_themeId=24;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#verticalGap}
     * attribute's value can be found in the {@link #Keyboard} array.
     *
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name rkr.simplekeyboard.inputmethod:verticalGap
     */
    public static final int Keyboard_verticalGap=25;
    /**
     * Attributes that can be used with a KeyboardLayoutSet_Element.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #KeyboardLayoutSet_Element_allowRedundantMoreKeys rkr.simplekeyboard.inputmethod:allowRedundantMoreKeys}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyboardLayoutSet_Element_elementKeyboard rkr.simplekeyboard.inputmethod:elementKeyboard}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyboardLayoutSet_Element_elementName rkr.simplekeyboard.inputmethod:elementName}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyboardLayoutSet_Element_enableProximityCharsCorrection rkr.simplekeyboard.inputmethod:enableProximityCharsCorrection}</code></td><td></td></tr>
     * </table>
     * @see #KeyboardLayoutSet_Element_allowRedundantMoreKeys
     * @see #KeyboardLayoutSet_Element_elementKeyboard
     * @see #KeyboardLayoutSet_Element_elementName
     * @see #KeyboardLayoutSet_Element_enableProximityCharsCorrection
     */
    public static final int[] KeyboardLayoutSet_Element={
      0x7f030001, 0x7f03000a, 0x7f03000b, 0x7f03000c
    };
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#allowRedundantMoreKeys}
     * attribute's value can be found in the {@link #KeyboardLayoutSet_Element} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:allowRedundantMoreKeys
     */
    public static final int KeyboardLayoutSet_Element_allowRedundantMoreKeys=0;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#elementKeyboard}
     * attribute's value can be found in the {@link #KeyboardLayoutSet_Element} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:elementKeyboard
     */
    public static final int KeyboardLayoutSet_Element_elementKeyboard=1;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#elementName}
     * attribute's value can be found in the {@link #KeyboardLayoutSet_Element} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>alphabet</td><td>0</td><td></td></tr>
     * <tr><td>alphabetAutomaticShifted</td><td>2</td><td></td></tr>
     * <tr><td>alphabetManualShifted</td><td>1</td><td></td></tr>
     * <tr><td>alphabetShiftLockShifted</td><td>4</td><td></td></tr>
     * <tr><td>alphabetShiftLocked</td><td>3</td><td></td></tr>
     * <tr><td>number</td><td>9</td><td></td></tr>
     * <tr><td>phone</td><td>7</td><td></td></tr>
     * <tr><td>phoneSymbols</td><td>8</td><td></td></tr>
     * <tr><td>symbols</td><td>5</td><td></td></tr>
     * <tr><td>symbolsShifted</td><td>6</td><td></td></tr>
     * </table>
     *
     * @attr name rkr.simplekeyboard.inputmethod:elementName
     */
    public static final int KeyboardLayoutSet_Element_elementName=2;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#enableProximityCharsCorrection}
     * attribute's value can be found in the {@link #KeyboardLayoutSet_Element} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:enableProximityCharsCorrection
     */
    public static final int KeyboardLayoutSet_Element_enableProximityCharsCorrection=3;
    /**
     * Attributes that can be used with a KeyboardTheme.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #KeyboardTheme_inputViewStyle rkr.simplekeyboard.inputmethod:inputViewStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyboardTheme_keyboardStyle rkr.simplekeyboard.inputmethod:keyboardStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyboardTheme_keyboardViewStyle rkr.simplekeyboard.inputmethod:keyboardViewStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyboardTheme_mainKeyboardViewStyle rkr.simplekeyboard.inputmethod:mainKeyboardViewStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyboardTheme_moreKeysKeyboardStyle rkr.simplekeyboard.inputmethod:moreKeysKeyboardStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyboardTheme_moreKeysKeyboardViewStyle rkr.simplekeyboard.inputmethod:moreKeysKeyboardViewStyle}</code></td><td></td></tr>
     * </table>
     * @see #KeyboardTheme_inputViewStyle
     * @see #KeyboardTheme_keyboardStyle
     * @see #KeyboardTheme_keyboardViewStyle
     * @see #KeyboardTheme_mainKeyboardViewStyle
     * @see #KeyboardTheme_moreKeysKeyboardStyle
     * @see #KeyboardTheme_moreKeysKeyboardViewStyle
     */
    public static final int[] KeyboardTheme={
      0x7f030024, 0x7f030056, 0x7f030059, 0x7f030062, 
      0x7f030069, 0x7f03006a
    };
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#inputViewStyle}
     * attribute's value can be found in the {@link #KeyboardTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:inputViewStyle
     */
    public static final int KeyboardTheme_inputViewStyle=0;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#keyboardStyle}
     * attribute's value can be found in the {@link #KeyboardTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:keyboardStyle
     */
    public static final int KeyboardTheme_keyboardStyle=1;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#keyboardViewStyle}
     * attribute's value can be found in the {@link #KeyboardTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:keyboardViewStyle
     */
    public static final int KeyboardTheme_keyboardViewStyle=2;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#mainKeyboardViewStyle}
     * attribute's value can be found in the {@link #KeyboardTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:mainKeyboardViewStyle
     */
    public static final int KeyboardTheme_mainKeyboardViewStyle=3;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#moreKeysKeyboardStyle}
     * attribute's value can be found in the {@link #KeyboardTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:moreKeysKeyboardStyle
     */
    public static final int KeyboardTheme_moreKeysKeyboardStyle=4;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#moreKeysKeyboardViewStyle}
     * attribute's value can be found in the {@link #KeyboardTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:moreKeysKeyboardViewStyle
     */
    public static final int KeyboardTheme_moreKeysKeyboardViewStyle=5;
    /**
     * Attributes that can be used with a KeyboardView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #KeyboardView_functionalKeyBackground rkr.simplekeyboard.inputmethod:functionalKeyBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyboardView_keyBackground rkr.simplekeyboard.inputmethod:keyBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyboardView_keyHintLetterPadding rkr.simplekeyboard.inputmethod:keyHintLetterPadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyboardView_keyShiftedLetterHintPadding rkr.simplekeyboard.inputmethod:keyShiftedLetterHintPadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyboardView_keyTextShadowRadius rkr.simplekeyboard.inputmethod:keyTextShadowRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyboardView_spacebarBackground rkr.simplekeyboard.inputmethod:spacebarBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyboardView_spacebarIconWidthRatio rkr.simplekeyboard.inputmethod:spacebarIconWidthRatio}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyboardView_verticalCorrection rkr.simplekeyboard.inputmethod:verticalCorrection}</code></td><td></td></tr>
     * </table>
     * @see #KeyboardView_functionalKeyBackground
     * @see #KeyboardView_keyBackground
     * @see #KeyboardView_keyHintLetterPadding
     * @see #KeyboardView_keyShiftedLetterHintPadding
     * @see #KeyboardView_keyTextShadowRadius
     * @see #KeyboardView_spacebarBackground
     * @see #KeyboardView_spacebarIconWidthRatio
     * @see #KeyboardView_verticalCorrection
     */
    public static final int[] KeyboardView={
      0x7f03000d, 0x7f030028, 0x7f03002f, 0x7f030045, 
      0x7f03004c, 0x7f030078, 0x7f030079, 0x7f030080
    };
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#functionalKeyBackground}
     * attribute's value can be found in the {@link #KeyboardView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:functionalKeyBackground
     */
    public static final int KeyboardView_functionalKeyBackground=0;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#keyBackground}
     * attribute's value can be found in the {@link #KeyboardView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:keyBackground
     */
    public static final int KeyboardView_keyBackground=1;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#keyHintLetterPadding}
     * attribute's value can be found in the {@link #KeyboardView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name rkr.simplekeyboard.inputmethod:keyHintLetterPadding
     */
    public static final int KeyboardView_keyHintLetterPadding=2;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#keyShiftedLetterHintPadding}
     * attribute's value can be found in the {@link #KeyboardView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name rkr.simplekeyboard.inputmethod:keyShiftedLetterHintPadding
     */
    public static final int KeyboardView_keyShiftedLetterHintPadding=3;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#keyTextShadowRadius}
     * attribute's value can be found in the {@link #KeyboardView} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:keyTextShadowRadius
     */
    public static final int KeyboardView_keyTextShadowRadius=4;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#spacebarBackground}
     * attribute's value can be found in the {@link #KeyboardView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:spacebarBackground
     */
    public static final int KeyboardView_spacebarBackground=5;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#spacebarIconWidthRatio}
     * attribute's value can be found in the {@link #KeyboardView} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:spacebarIconWidthRatio
     */
    public static final int KeyboardView_spacebarIconWidthRatio=6;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#verticalCorrection}
     * attribute's value can be found in the {@link #KeyboardView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name rkr.simplekeyboard.inputmethod:verticalCorrection
     */
    public static final int KeyboardView_verticalCorrection=7;
    /**
     * Attributes that can be used with a Keyboard_Case.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Keyboard_Case_clobberSettingsKey rkr.simplekeyboard.inputmethod:clobberSettingsKey}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_Case_countryCode rkr.simplekeyboard.inputmethod:countryCode}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_Case_hasShortcutKey rkr.simplekeyboard.inputmethod:hasShortcutKey}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_Case_imeAction rkr.simplekeyboard.inputmethod:imeAction}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_Case_isIconDefined rkr.simplekeyboard.inputmethod:isIconDefined}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_Case_isMultiLine rkr.simplekeyboard.inputmethod:isMultiLine}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_Case_keyboardLayoutSet rkr.simplekeyboard.inputmethod:keyboardLayoutSet}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_Case_keyboardLayoutSetElement rkr.simplekeyboard.inputmethod:keyboardLayoutSetElement}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_Case_keyboardTheme rkr.simplekeyboard.inputmethod:keyboardTheme}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_Case_languageCode rkr.simplekeyboard.inputmethod:languageCode}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_Case_languageSwitchKeyEnabled rkr.simplekeyboard.inputmethod:languageSwitchKeyEnabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_Case_localeCode rkr.simplekeyboard.inputmethod:localeCode}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_Case_mode rkr.simplekeyboard.inputmethod:mode}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_Case_navigateNext rkr.simplekeyboard.inputmethod:navigateNext}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_Case_navigatePrevious rkr.simplekeyboard.inputmethod:navigatePrevious}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_Case_passwordInput rkr.simplekeyboard.inputmethod:passwordInput}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_Case_showExtraChars rkr.simplekeyboard.inputmethod:showExtraChars}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_Case_showNumberRow rkr.simplekeyboard.inputmethod:showNumberRow}</code></td><td></td></tr>
     * </table>
     * @see #Keyboard_Case_clobberSettingsKey
     * @see #Keyboard_Case_countryCode
     * @see #Keyboard_Case_hasShortcutKey
     * @see #Keyboard_Case_imeAction
     * @see #Keyboard_Case_isIconDefined
     * @see #Keyboard_Case_isMultiLine
     * @see #Keyboard_Case_keyboardLayoutSet
     * @see #Keyboard_Case_keyboardLayoutSetElement
     * @see #Keyboard_Case_keyboardTheme
     * @see #Keyboard_Case_languageCode
     * @see #Keyboard_Case_languageSwitchKeyEnabled
     * @see #Keyboard_Case_localeCode
     * @see #Keyboard_Case_mode
     * @see #Keyboard_Case_navigateNext
     * @see #Keyboard_Case_navigatePrevious
     * @see #Keyboard_Case_passwordInput
     * @see #Keyboard_Case_showExtraChars
     * @see #Keyboard_Case_showNumberRow
     */
    public static final int[] Keyboard_Case={
      0x7f030007, 0x7f030009, 0x7f03000f, 0x7f030023, 
      0x7f030025, 0x7f030026, 0x7f030052, 0x7f030053, 
      0x7f030057, 0x7f03005a, 0x7f03005f, 0x7f030060, 
      0x7f030066, 0x7f03006c, 0x7f03006d, 0x7f03006f, 
      0x7f030071, 0x7f030073
    };
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#clobberSettingsKey}
     * attribute's value can be found in the {@link #Keyboard_Case} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:clobberSettingsKey
     */
    public static final int Keyboard_Case_clobberSettingsKey=0;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#countryCode}
     * attribute's value can be found in the {@link #Keyboard_Case} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name rkr.simplekeyboard.inputmethod:countryCode
     */
    public static final int Keyboard_Case_countryCode=1;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#hasShortcutKey}
     * attribute's value can be found in the {@link #Keyboard_Case} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:hasShortcutKey
     */
    public static final int Keyboard_Case_hasShortcutKey=2;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#imeAction}
     * attribute's value can be found in the {@link #Keyboard_Case} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>actionCustomLabel</td><td>100</td><td></td></tr>
     * <tr><td>actionDone</td><td>6</td><td></td></tr>
     * <tr><td>actionGo</td><td>2</td><td></td></tr>
     * <tr><td>actionNext</td><td>5</td><td></td></tr>
     * <tr><td>actionNone</td><td>1</td><td></td></tr>
     * <tr><td>actionPrevious</td><td>7</td><td></td></tr>
     * <tr><td>actionSearch</td><td>3</td><td></td></tr>
     * <tr><td>actionSend</td><td>4</td><td></td></tr>
     * <tr><td>actionUnspecified</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name rkr.simplekeyboard.inputmethod:imeAction
     */
    public static final int Keyboard_Case_imeAction=3;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#isIconDefined}
     * attribute's value can be found in the {@link #Keyboard_Case} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name rkr.simplekeyboard.inputmethod:isIconDefined
     */
    public static final int Keyboard_Case_isIconDefined=4;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#isMultiLine}
     * attribute's value can be found in the {@link #Keyboard_Case} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:isMultiLine
     */
    public static final int Keyboard_Case_isMultiLine=5;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#keyboardLayoutSet}
     * attribute's value can be found in the {@link #Keyboard_Case} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name rkr.simplekeyboard.inputmethod:keyboardLayoutSet
     */
    public static final int Keyboard_Case_keyboardLayoutSet=6;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#keyboardLayoutSetElement}
     * attribute's value can be found in the {@link #Keyboard_Case} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>alphabet</td><td>0</td><td></td></tr>
     * <tr><td>alphabetAutomaticShifted</td><td>2</td><td></td></tr>
     * <tr><td>alphabetManualShifted</td><td>1</td><td></td></tr>
     * <tr><td>alphabetShiftLockShifted</td><td>4</td><td></td></tr>
     * <tr><td>alphabetShiftLocked</td><td>3</td><td></td></tr>
     * <tr><td>number</td><td>9</td><td></td></tr>
     * <tr><td>phone</td><td>7</td><td></td></tr>
     * <tr><td>phoneSymbols</td><td>8</td><td></td></tr>
     * <tr><td>symbols</td><td>5</td><td></td></tr>
     * <tr><td>symbolsShifted</td><td>6</td><td></td></tr>
     * </table>
     *
     * @attr name rkr.simplekeyboard.inputmethod:keyboardLayoutSetElement
     */
    public static final int Keyboard_Case_keyboardLayoutSetElement=7;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#keyboardTheme}
     * attribute's value can be found in the {@link #Keyboard_Case} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>LXXDark</td><td>4</td><td></td></tr>
     * <tr><td>LXXDarkBorder</td><td>2</td><td></td></tr>
     * <tr><td>LXXLight</td><td>3</td><td></td></tr>
     * <tr><td>LXXLightBorder</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name rkr.simplekeyboard.inputmethod:keyboardTheme
     */
    public static final int Keyboard_Case_keyboardTheme=8;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#languageCode}
     * attribute's value can be found in the {@link #Keyboard_Case} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name rkr.simplekeyboard.inputmethod:languageCode
     */
    public static final int Keyboard_Case_languageCode=9;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#languageSwitchKeyEnabled}
     * attribute's value can be found in the {@link #Keyboard_Case} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:languageSwitchKeyEnabled
     */
    public static final int Keyboard_Case_languageSwitchKeyEnabled=10;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#localeCode}
     * attribute's value can be found in the {@link #Keyboard_Case} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name rkr.simplekeyboard.inputmethod:localeCode
     */
    public static final int Keyboard_Case_localeCode=11;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#mode}
     * attribute's value can be found in the {@link #Keyboard_Case} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>email</td><td>2</td><td></td></tr>
     * <tr><td>im</td><td>3</td><td></td></tr>
     * <tr><td>number</td><td>5</td><td></td></tr>
     * <tr><td>phone</td><td>4</td><td></td></tr>
     * <tr><td>text</td><td>0</td><td></td></tr>
     * <tr><td>url</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name rkr.simplekeyboard.inputmethod:mode
     */
    public static final int Keyboard_Case_mode=12;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#navigateNext}
     * attribute's value can be found in the {@link #Keyboard_Case} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:navigateNext
     */
    public static final int Keyboard_Case_navigateNext=13;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#navigatePrevious}
     * attribute's value can be found in the {@link #Keyboard_Case} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:navigatePrevious
     */
    public static final int Keyboard_Case_navigatePrevious=14;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#passwordInput}
     * attribute's value can be found in the {@link #Keyboard_Case} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:passwordInput
     */
    public static final int Keyboard_Case_passwordInput=15;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#showExtraChars}
     * attribute's value can be found in the {@link #Keyboard_Case} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:showExtraChars
     */
    public static final int Keyboard_Case_showExtraChars=16;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#showNumberRow}
     * attribute's value can be found in the {@link #Keyboard_Case} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:showNumberRow
     */
    public static final int Keyboard_Case_showNumberRow=17;
    /**
     * Attributes that can be used with a Keyboard_GridRows.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Keyboard_GridRows_codesArray rkr.simplekeyboard.inputmethod:codesArray}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_GridRows_textsArray rkr.simplekeyboard.inputmethod:textsArray}</code></td><td></td></tr>
     * </table>
     * @see #Keyboard_GridRows_codesArray
     * @see #Keyboard_GridRows_textsArray
     */
    public static final int[] Keyboard_GridRows={
      0x7f030008, 0x7f03007c
    };
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#codesArray}
     * attribute's value can be found in the {@link #Keyboard_GridRows} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:codesArray
     */
    public static final int Keyboard_GridRows_codesArray=0;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#textsArray}
     * attribute's value can be found in the {@link #Keyboard_GridRows} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:textsArray
     */
    public static final int Keyboard_GridRows_textsArray=1;
    /**
     * Attributes that can be used with a Keyboard_Include.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Keyboard_Include_keyboardLayout rkr.simplekeyboard.inputmethod:keyboardLayout}</code></td><td></td></tr>
     * </table>
     * @see #Keyboard_Include_keyboardLayout
     */
    public static final int[] Keyboard_Include={
      0x7f030051
    };
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#keyboardLayout}
     * attribute's value can be found in the {@link #Keyboard_Include} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:keyboardLayout
     */
    public static final int Keyboard_Include_keyboardLayout=0;
    /**
     * Attributes that can be used with a Keyboard_Key.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Keyboard_Key_additionalMoreKeys rkr.simplekeyboard.inputmethod:additionalMoreKeys}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_Key_altCode rkr.simplekeyboard.inputmethod:altCode}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_Key_backgroundType rkr.simplekeyboard.inputmethod:backgroundType}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_Key_functionalTextColor rkr.simplekeyboard.inputmethod:functionalTextColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_Key_keyActionFlags rkr.simplekeyboard.inputmethod:keyActionFlags}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_Key_keyHintLabel rkr.simplekeyboard.inputmethod:keyHintLabel}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_Key_keyHintLabelColor rkr.simplekeyboard.inputmethod:keyHintLabelColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_Key_keyHintLabelOffCenterRatio rkr.simplekeyboard.inputmethod:keyHintLabelOffCenterRatio}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_Key_keyHintLabelRatio rkr.simplekeyboard.inputmethod:keyHintLabelRatio}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_Key_keyHintLabelVerticalAdjustment rkr.simplekeyboard.inputmethod:keyHintLabelVerticalAdjustment}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_Key_keyHintLetterColor rkr.simplekeyboard.inputmethod:keyHintLetterColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_Key_keyHintLetterRatio rkr.simplekeyboard.inputmethod:keyHintLetterRatio}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_Key_keyIconDisabled rkr.simplekeyboard.inputmethod:keyIconDisabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_Key_keyLabelFlags rkr.simplekeyboard.inputmethod:keyLabelFlags}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_Key_keyLabelOffCenterRatio rkr.simplekeyboard.inputmethod:keyLabelOffCenterRatio}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_Key_keyLabelSize rkr.simplekeyboard.inputmethod:keyLabelSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_Key_keyLargeLetterRatio rkr.simplekeyboard.inputmethod:keyLargeLetterRatio}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_Key_keyLetterSize rkr.simplekeyboard.inputmethod:keyLetterSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_Key_keyPreviewTextColor rkr.simplekeyboard.inputmethod:keyPreviewTextColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_Key_keyPreviewTextRatio rkr.simplekeyboard.inputmethod:keyPreviewTextRatio}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_Key_keyShiftedLetterHintActivatedColor rkr.simplekeyboard.inputmethod:keyShiftedLetterHintActivatedColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_Key_keyShiftedLetterHintInactivatedColor rkr.simplekeyboard.inputmethod:keyShiftedLetterHintInactivatedColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_Key_keyShiftedLetterHintRatio rkr.simplekeyboard.inputmethod:keyShiftedLetterHintRatio}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_Key_keySpec rkr.simplekeyboard.inputmethod:keySpec}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_Key_keyStyle rkr.simplekeyboard.inputmethod:keyStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_Key_keyTextColor rkr.simplekeyboard.inputmethod:keyTextColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_Key_keyTextInactivatedColor rkr.simplekeyboard.inputmethod:keyTextInactivatedColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_Key_keyTextShadowColor rkr.simplekeyboard.inputmethod:keyTextShadowColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_Key_keyTypeface rkr.simplekeyboard.inputmethod:keyTypeface}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_Key_keyWidth rkr.simplekeyboard.inputmethod:keyWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_Key_keyXPos rkr.simplekeyboard.inputmethod:keyXPos}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_Key_maxMoreKeysColumn rkr.simplekeyboard.inputmethod:maxMoreKeysColumn}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_Key_moreKeys rkr.simplekeyboard.inputmethod:moreKeys}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_Key_visualInsetsLeft rkr.simplekeyboard.inputmethod:visualInsetsLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_Key_visualInsetsRight rkr.simplekeyboard.inputmethod:visualInsetsRight}</code></td><td></td></tr>
     * </table>
     * @see #Keyboard_Key_additionalMoreKeys
     * @see #Keyboard_Key_altCode
     * @see #Keyboard_Key_backgroundType
     * @see #Keyboard_Key_functionalTextColor
     * @see #Keyboard_Key_keyActionFlags
     * @see #Keyboard_Key_keyHintLabel
     * @see #Keyboard_Key_keyHintLabelColor
     * @see #Keyboard_Key_keyHintLabelOffCenterRatio
     * @see #Keyboard_Key_keyHintLabelRatio
     * @see #Keyboard_Key_keyHintLabelVerticalAdjustment
     * @see #Keyboard_Key_keyHintLetterColor
     * @see #Keyboard_Key_keyHintLetterRatio
     * @see #Keyboard_Key_keyIconDisabled
     * @see #Keyboard_Key_keyLabelFlags
     * @see #Keyboard_Key_keyLabelOffCenterRatio
     * @see #Keyboard_Key_keyLabelSize
     * @see #Keyboard_Key_keyLargeLetterRatio
     * @see #Keyboard_Key_keyLetterSize
     * @see #Keyboard_Key_keyPreviewTextColor
     * @see #Keyboard_Key_keyPreviewTextRatio
     * @see #Keyboard_Key_keyShiftedLetterHintActivatedColor
     * @see #Keyboard_Key_keyShiftedLetterHintInactivatedColor
     * @see #Keyboard_Key_keyShiftedLetterHintRatio
     * @see #Keyboard_Key_keySpec
     * @see #Keyboard_Key_keyStyle
     * @see #Keyboard_Key_keyTextColor
     * @see #Keyboard_Key_keyTextInactivatedColor
     * @see #Keyboard_Key_keyTextShadowColor
     * @see #Keyboard_Key_keyTypeface
     * @see #Keyboard_Key_keyWidth
     * @see #Keyboard_Key_keyXPos
     * @see #Keyboard_Key_maxMoreKeysColumn
     * @see #Keyboard_Key_moreKeys
     * @see #Keyboard_Key_visualInsetsLeft
     * @see #Keyboard_Key_visualInsetsRight
     */
    public static final int[] Keyboard_Key={
      0x7f030000, 0x7f030002, 0x7f030006, 0x7f03000e, 
      0x7f030027, 0x7f030029, 0x7f03002a, 0x7f03002b, 
      0x7f03002c, 0x7f03002d, 0x7f03002e, 0x7f030030, 
      0x7f030033, 0x7f030034, 0x7f030035, 0x7f030036, 
      0x7f030037, 0x7f030038, 0x7f03003e, 0x7f03003f, 
      0x7f030043, 0x7f030044, 0x7f030046, 0x7f030047, 
      0x7f030048, 0x7f030049, 0x7f03004a, 0x7f03004b, 
      0x7f03004d, 0x7f03004e, 0x7f03004f, 0x7f030063, 
      0x7f030067, 0x7f030082, 0x7f030083
    };
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#additionalMoreKeys}
     * attribute's value can be found in the {@link #Keyboard_Key} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name rkr.simplekeyboard.inputmethod:additionalMoreKeys
     */
    public static final int Keyboard_Key_additionalMoreKeys=0;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#altCode}
     * attribute's value can be found in the {@link #Keyboard_Key} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name rkr.simplekeyboard.inputmethod:altCode
     */
    public static final int Keyboard_Key_altCode=1;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#backgroundType}
     * attribute's value can be found in the {@link #Keyboard_Key} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>action</td><td>5</td><td></td></tr>
     * <tr><td>empty</td><td>0</td><td></td></tr>
     * <tr><td>functional</td><td>2</td><td></td></tr>
     * <tr><td>normal</td><td>1</td><td></td></tr>
     * <tr><td>spacebar</td><td>6</td><td></td></tr>
     * <tr><td>stickyOff</td><td>3</td><td></td></tr>
     * <tr><td>stickyOn</td><td>4</td><td></td></tr>
     * </table>
     *
     * @attr name rkr.simplekeyboard.inputmethod:backgroundType
     */
    public static final int Keyboard_Key_backgroundType=2;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#functionalTextColor}
     * attribute's value can be found in the {@link #Keyboard_Key} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:functionalTextColor
     */
    public static final int Keyboard_Key_functionalTextColor=3;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#keyActionFlags}
     * attribute's value can be found in the {@link #Keyboard_Key} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>altCodeWhileTyping</td><td>4</td><td></td></tr>
     * <tr><td>enableLongPress</td><td>8</td><td></td></tr>
     * <tr><td>isRepeatable</td><td>1</td><td></td></tr>
     * <tr><td>noKeyPreview</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name rkr.simplekeyboard.inputmethod:keyActionFlags
     */
    public static final int Keyboard_Key_keyActionFlags=4;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#keyHintLabel}
     * attribute's value can be found in the {@link #Keyboard_Key} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name rkr.simplekeyboard.inputmethod:keyHintLabel
     */
    public static final int Keyboard_Key_keyHintLabel=5;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#keyHintLabelColor}
     * attribute's value can be found in the {@link #Keyboard_Key} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:keyHintLabelColor
     */
    public static final int Keyboard_Key_keyHintLabelColor=6;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#keyHintLabelOffCenterRatio}
     * attribute's value can be found in the {@link #Keyboard_Key} array.
     *
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name rkr.simplekeyboard.inputmethod:keyHintLabelOffCenterRatio
     */
    public static final int Keyboard_Key_keyHintLabelOffCenterRatio=7;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#keyHintLabelRatio}
     * attribute's value can be found in the {@link #Keyboard_Key} array.
     *
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name rkr.simplekeyboard.inputmethod:keyHintLabelRatio
     */
    public static final int Keyboard_Key_keyHintLabelRatio=8;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#keyHintLabelVerticalAdjustment}
     * attribute's value can be found in the {@link #Keyboard_Key} array.
     *
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name rkr.simplekeyboard.inputmethod:keyHintLabelVerticalAdjustment
     */
    public static final int Keyboard_Key_keyHintLabelVerticalAdjustment=9;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#keyHintLetterColor}
     * attribute's value can be found in the {@link #Keyboard_Key} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:keyHintLetterColor
     */
    public static final int Keyboard_Key_keyHintLetterColor=10;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#keyHintLetterRatio}
     * attribute's value can be found in the {@link #Keyboard_Key} array.
     *
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name rkr.simplekeyboard.inputmethod:keyHintLetterRatio
     */
    public static final int Keyboard_Key_keyHintLetterRatio=11;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#keyIconDisabled}
     * attribute's value can be found in the {@link #Keyboard_Key} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name rkr.simplekeyboard.inputmethod:keyIconDisabled
     */
    public static final int Keyboard_Key_keyIconDisabled=12;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#keyLabelFlags}
     * attribute's value can be found in the {@link #Keyboard_Key} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>alignHintLabelToBottom</td><td>2</td><td></td></tr>
     * <tr><td>alignIconToBottom</td><td>4</td><td></td></tr>
     * <tr><td>alignLabelOffCenter</td><td>8</td><td></td></tr>
     * <tr><td>autoScale</td><td>c000</td><td></td></tr>
     * <tr><td>autoXScale</td><td>4000</td><td></td></tr>
     * <tr><td>disableAdditionalMoreKeys</td><td>80000000</td><td></td></tr>
     * <tr><td>disableKeyHintLabel</td><td>40000000</td><td></td></tr>
     * <tr><td>followFunctionalTextColor</td><td>80000</td><td></td></tr>
     * <tr><td>followKeyHintLabelRatio</td><td>140</td><td></td></tr>
     * <tr><td>followKeyLabelRatio</td><td>c0</td><td></td></tr>
     * <tr><td>followKeyLargeLetterRatio</td><td>40</td><td></td></tr>
     * <tr><td>followKeyLetterRatio</td><td>80</td><td></td></tr>
     * <tr><td>fontDefault</td><td>30</td><td></td></tr>
     * <tr><td>fontMonoSpace</td><td>20</td><td></td></tr>
     * <tr><td>fontNormal</td><td>10</td><td></td></tr>
     * <tr><td>fromCustomActionLabel</td><td>40000</td><td></td></tr>
     * <tr><td>hasHintLabel</td><td>800</td><td></td></tr>
     * <tr><td>hasPopupHint</td><td>200</td><td></td></tr>
     * <tr><td>hasShiftedLetterHint</td><td>400</td><td></td></tr>
     * <tr><td>preserveCase</td><td>10000</td><td></td></tr>
     * <tr><td>shiftedLetterActivated</td><td>20000</td><td></td></tr>
     * </table>
     *
     * @attr name rkr.simplekeyboard.inputmethod:keyLabelFlags
     */
    public static final int Keyboard_Key_keyLabelFlags=13;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#keyLabelOffCenterRatio}
     * attribute's value can be found in the {@link #Keyboard_Key} array.
     *
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name rkr.simplekeyboard.inputmethod:keyLabelOffCenterRatio
     */
    public static final int Keyboard_Key_keyLabelOffCenterRatio=14;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#keyLabelSize}
     * attribute's value can be found in the {@link #Keyboard_Key} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name rkr.simplekeyboard.inputmethod:keyLabelSize
     */
    public static final int Keyboard_Key_keyLabelSize=15;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#keyLargeLetterRatio}
     * attribute's value can be found in the {@link #Keyboard_Key} array.
     *
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name rkr.simplekeyboard.inputmethod:keyLargeLetterRatio
     */
    public static final int Keyboard_Key_keyLargeLetterRatio=16;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#keyLetterSize}
     * attribute's value can be found in the {@link #Keyboard_Key} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name rkr.simplekeyboard.inputmethod:keyLetterSize
     */
    public static final int Keyboard_Key_keyLetterSize=17;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#keyPreviewTextColor}
     * attribute's value can be found in the {@link #Keyboard_Key} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:keyPreviewTextColor
     */
    public static final int Keyboard_Key_keyPreviewTextColor=18;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#keyPreviewTextRatio}
     * attribute's value can be found in the {@link #Keyboard_Key} array.
     *
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name rkr.simplekeyboard.inputmethod:keyPreviewTextRatio
     */
    public static final int Keyboard_Key_keyPreviewTextRatio=19;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#keyShiftedLetterHintActivatedColor}
     * attribute's value can be found in the {@link #Keyboard_Key} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:keyShiftedLetterHintActivatedColor
     */
    public static final int Keyboard_Key_keyShiftedLetterHintActivatedColor=20;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#keyShiftedLetterHintInactivatedColor}
     * attribute's value can be found in the {@link #Keyboard_Key} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:keyShiftedLetterHintInactivatedColor
     */
    public static final int Keyboard_Key_keyShiftedLetterHintInactivatedColor=21;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#keyShiftedLetterHintRatio}
     * attribute's value can be found in the {@link #Keyboard_Key} array.
     *
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name rkr.simplekeyboard.inputmethod:keyShiftedLetterHintRatio
     */
    public static final int Keyboard_Key_keyShiftedLetterHintRatio=22;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#keySpec}
     * attribute's value can be found in the {@link #Keyboard_Key} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name rkr.simplekeyboard.inputmethod:keySpec
     */
    public static final int Keyboard_Key_keySpec=23;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#keyStyle}
     * attribute's value can be found in the {@link #Keyboard_Key} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name rkr.simplekeyboard.inputmethod:keyStyle
     */
    public static final int Keyboard_Key_keyStyle=24;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#keyTextColor}
     * attribute's value can be found in the {@link #Keyboard_Key} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:keyTextColor
     */
    public static final int Keyboard_Key_keyTextColor=25;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#keyTextInactivatedColor}
     * attribute's value can be found in the {@link #Keyboard_Key} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:keyTextInactivatedColor
     */
    public static final int Keyboard_Key_keyTextInactivatedColor=26;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#keyTextShadowColor}
     * attribute's value can be found in the {@link #Keyboard_Key} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:keyTextShadowColor
     */
    public static final int Keyboard_Key_keyTextShadowColor=27;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#keyTypeface}
     * attribute's value can be found in the {@link #Keyboard_Key} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bold</td><td>1</td><td></td></tr>
     * <tr><td>boldItalic</td><td>3</td><td></td></tr>
     * <tr><td>italic</td><td>2</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name rkr.simplekeyboard.inputmethod:keyTypeface
     */
    public static final int Keyboard_Key_keyTypeface=28;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#keyWidth}
     * attribute's value can be found in the {@link #Keyboard_Key} array.
     *
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fillRight</td><td>ffffffff</td><td></td></tr>
     * </table>
     *
     * @attr name rkr.simplekeyboard.inputmethod:keyWidth
     */
    public static final int Keyboard_Key_keyWidth=29;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#keyXPos}
     * attribute's value can be found in the {@link #Keyboard_Key} array.
     *
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name rkr.simplekeyboard.inputmethod:keyXPos
     */
    public static final int Keyboard_Key_keyXPos=30;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#maxMoreKeysColumn}
     * attribute's value can be found in the {@link #Keyboard_Key} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:maxMoreKeysColumn
     */
    public static final int Keyboard_Key_maxMoreKeysColumn=31;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#moreKeys}
     * attribute's value can be found in the {@link #Keyboard_Key} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name rkr.simplekeyboard.inputmethod:moreKeys
     */
    public static final int Keyboard_Key_moreKeys=32;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#visualInsetsLeft}
     * attribute's value can be found in the {@link #Keyboard_Key} array.
     *
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name rkr.simplekeyboard.inputmethod:visualInsetsLeft
     */
    public static final int Keyboard_Key_visualInsetsLeft=33;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#visualInsetsRight}
     * attribute's value can be found in the {@link #Keyboard_Key} array.
     *
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name rkr.simplekeyboard.inputmethod:visualInsetsRight
     */
    public static final int Keyboard_Key_visualInsetsRight=34;
    /**
     * Attributes that can be used with a Keyboard_KeyStyle.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Keyboard_KeyStyle_parentStyle rkr.simplekeyboard.inputmethod:parentStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Keyboard_KeyStyle_styleName rkr.simplekeyboard.inputmethod:styleName}</code></td><td></td></tr>
     * </table>
     * @see #Keyboard_KeyStyle_parentStyle
     * @see #Keyboard_KeyStyle_styleName
     */
    public static final int[] Keyboard_KeyStyle={
      0x7f03006e, 0x7f03007b
    };
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#parentStyle}
     * attribute's value can be found in the {@link #Keyboard_KeyStyle} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name rkr.simplekeyboard.inputmethod:parentStyle
     */
    public static final int Keyboard_KeyStyle_parentStyle=0;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#styleName}
     * attribute's value can be found in the {@link #Keyboard_KeyStyle} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name rkr.simplekeyboard.inputmethod:styleName
     */
    public static final int Keyboard_KeyStyle_styleName=1;
    /**
     * Attributes that can be used with a MainKeyboardView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MainKeyboardView_altCodeKeyWhileTypingFadeinAnimator rkr.simplekeyboard.inputmethod:altCodeKeyWhileTypingFadeinAnimator}</code></td><td></td></tr>
     * <tr><td><code>{@link #MainKeyboardView_altCodeKeyWhileTypingFadeoutAnimator rkr.simplekeyboard.inputmethod:altCodeKeyWhileTypingFadeoutAnimator}</code></td><td></td></tr>
     * <tr><td><code>{@link #MainKeyboardView_backgroundDimAlpha rkr.simplekeyboard.inputmethod:backgroundDimAlpha}</code></td><td></td></tr>
     * <tr><td><code>{@link #MainKeyboardView_ignoreAltCodeKeyTimeout rkr.simplekeyboard.inputmethod:ignoreAltCodeKeyTimeout}</code></td><td></td></tr>
     * <tr><td><code>{@link #MainKeyboardView_keyHysteresisDistance rkr.simplekeyboard.inputmethod:keyHysteresisDistance}</code></td><td></td></tr>
     * <tr><td><code>{@link #MainKeyboardView_keyHysteresisDistanceForSlidingModifier rkr.simplekeyboard.inputmethod:keyHysteresisDistanceForSlidingModifier}</code></td><td></td></tr>
     * <tr><td><code>{@link #MainKeyboardView_keyPreviewBackground rkr.simplekeyboard.inputmethod:keyPreviewBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #MainKeyboardView_keyPreviewDismissAnimator rkr.simplekeyboard.inputmethod:keyPreviewDismissAnimator}</code></td><td></td></tr>
     * <tr><td><code>{@link #MainKeyboardView_keyPreviewHeight rkr.simplekeyboard.inputmethod:keyPreviewHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #MainKeyboardView_keyPreviewLingerTimeout rkr.simplekeyboard.inputmethod:keyPreviewLingerTimeout}</code></td><td></td></tr>
     * <tr><td><code>{@link #MainKeyboardView_keyPreviewOffset rkr.simplekeyboard.inputmethod:keyPreviewOffset}</code></td><td></td></tr>
     * <tr><td><code>{@link #MainKeyboardView_keyRepeatInterval rkr.simplekeyboard.inputmethod:keyRepeatInterval}</code></td><td></td></tr>
     * <tr><td><code>{@link #MainKeyboardView_keyRepeatStartTimeout rkr.simplekeyboard.inputmethod:keyRepeatStartTimeout}</code></td><td></td></tr>
     * <tr><td><code>{@link #MainKeyboardView_keySelectionByDraggingFinger rkr.simplekeyboard.inputmethod:keySelectionByDraggingFinger}</code></td><td></td></tr>
     * <tr><td><code>{@link #MainKeyboardView_languageOnSpacebarFadeoutAnimator rkr.simplekeyboard.inputmethod:languageOnSpacebarFadeoutAnimator}</code></td><td></td></tr>
     * <tr><td><code>{@link #MainKeyboardView_languageOnSpacebarFinalAlpha rkr.simplekeyboard.inputmethod:languageOnSpacebarFinalAlpha}</code></td><td></td></tr>
     * <tr><td><code>{@link #MainKeyboardView_languageOnSpacebarTextColor rkr.simplekeyboard.inputmethod:languageOnSpacebarTextColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #MainKeyboardView_languageOnSpacebarTextRatio rkr.simplekeyboard.inputmethod:languageOnSpacebarTextRatio}</code></td><td></td></tr>
     * <tr><td><code>{@link #MainKeyboardView_longPressShiftLockTimeout rkr.simplekeyboard.inputmethod:longPressShiftLockTimeout}</code></td><td></td></tr>
     * <tr><td><code>{@link #MainKeyboardView_moreKeysKeyboardLayout rkr.simplekeyboard.inputmethod:moreKeysKeyboardLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #MainKeyboardView_showMoreKeysKeyboardAtTouchedPoint rkr.simplekeyboard.inputmethod:showMoreKeysKeyboardAtTouchedPoint}</code></td><td></td></tr>
     * <tr><td><code>{@link #MainKeyboardView_slidingKeyInputPreviewBodyRatio rkr.simplekeyboard.inputmethod:slidingKeyInputPreviewBodyRatio}</code></td><td></td></tr>
     * <tr><td><code>{@link #MainKeyboardView_slidingKeyInputPreviewColor rkr.simplekeyboard.inputmethod:slidingKeyInputPreviewColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #MainKeyboardView_slidingKeyInputPreviewShadowRatio rkr.simplekeyboard.inputmethod:slidingKeyInputPreviewShadowRatio}</code></td><td></td></tr>
     * <tr><td><code>{@link #MainKeyboardView_slidingKeyInputPreviewWidth rkr.simplekeyboard.inputmethod:slidingKeyInputPreviewWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #MainKeyboardView_touchNoiseThresholdDistance rkr.simplekeyboard.inputmethod:touchNoiseThresholdDistance}</code></td><td></td></tr>
     * <tr><td><code>{@link #MainKeyboardView_touchNoiseThresholdTime rkr.simplekeyboard.inputmethod:touchNoiseThresholdTime}</code></td><td></td></tr>
     * </table>
     * @see #MainKeyboardView_altCodeKeyWhileTypingFadeinAnimator
     * @see #MainKeyboardView_altCodeKeyWhileTypingFadeoutAnimator
     * @see #MainKeyboardView_backgroundDimAlpha
     * @see #MainKeyboardView_ignoreAltCodeKeyTimeout
     * @see #MainKeyboardView_keyHysteresisDistance
     * @see #MainKeyboardView_keyHysteresisDistanceForSlidingModifier
     * @see #MainKeyboardView_keyPreviewBackground
     * @see #MainKeyboardView_keyPreviewDismissAnimator
     * @see #MainKeyboardView_keyPreviewHeight
     * @see #MainKeyboardView_keyPreviewLingerTimeout
     * @see #MainKeyboardView_keyPreviewOffset
     * @see #MainKeyboardView_keyRepeatInterval
     * @see #MainKeyboardView_keyRepeatStartTimeout
     * @see #MainKeyboardView_keySelectionByDraggingFinger
     * @see #MainKeyboardView_languageOnSpacebarFadeoutAnimator
     * @see #MainKeyboardView_languageOnSpacebarFinalAlpha
     * @see #MainKeyboardView_languageOnSpacebarTextColor
     * @see #MainKeyboardView_languageOnSpacebarTextRatio
     * @see #MainKeyboardView_longPressShiftLockTimeout
     * @see #MainKeyboardView_moreKeysKeyboardLayout
     * @see #MainKeyboardView_showMoreKeysKeyboardAtTouchedPoint
     * @see #MainKeyboardView_slidingKeyInputPreviewBodyRatio
     * @see #MainKeyboardView_slidingKeyInputPreviewColor
     * @see #MainKeyboardView_slidingKeyInputPreviewShadowRatio
     * @see #MainKeyboardView_slidingKeyInputPreviewWidth
     * @see #MainKeyboardView_touchNoiseThresholdDistance
     * @see #MainKeyboardView_touchNoiseThresholdTime
     */
    public static final int[] MainKeyboardView={
      0x7f030003, 0x7f030004, 0x7f030005, 0x7f030022, 
      0x7f030031, 0x7f030032, 0x7f030039, 0x7f03003a, 
      0x7f03003b, 0x7f03003c, 0x7f03003d, 0x7f030040, 
      0x7f030041, 0x7f030042, 0x7f03005b, 0x7f03005c, 
      0x7f03005d, 0x7f03005e, 0x7f030061, 0x7f030068, 
      0x7f030072, 0x7f030074, 0x7f030075, 0x7f030076, 
      0x7f030077, 0x7f03007e, 0x7f03007f
    };
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#altCodeKeyWhileTypingFadeinAnimator}
     * attribute's value can be found in the {@link #MainKeyboardView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:altCodeKeyWhileTypingFadeinAnimator
     */
    public static final int MainKeyboardView_altCodeKeyWhileTypingFadeinAnimator=0;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#altCodeKeyWhileTypingFadeoutAnimator}
     * attribute's value can be found in the {@link #MainKeyboardView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:altCodeKeyWhileTypingFadeoutAnimator
     */
    public static final int MainKeyboardView_altCodeKeyWhileTypingFadeoutAnimator=1;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#backgroundDimAlpha}
     * attribute's value can be found in the {@link #MainKeyboardView} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:backgroundDimAlpha
     */
    public static final int MainKeyboardView_backgroundDimAlpha=2;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#ignoreAltCodeKeyTimeout}
     * attribute's value can be found in the {@link #MainKeyboardView} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:ignoreAltCodeKeyTimeout
     */
    public static final int MainKeyboardView_ignoreAltCodeKeyTimeout=3;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#keyHysteresisDistance}
     * attribute's value can be found in the {@link #MainKeyboardView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name rkr.simplekeyboard.inputmethod:keyHysteresisDistance
     */
    public static final int MainKeyboardView_keyHysteresisDistance=4;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#keyHysteresisDistanceForSlidingModifier}
     * attribute's value can be found in the {@link #MainKeyboardView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name rkr.simplekeyboard.inputmethod:keyHysteresisDistanceForSlidingModifier
     */
    public static final int MainKeyboardView_keyHysteresisDistanceForSlidingModifier=5;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#keyPreviewBackground}
     * attribute's value can be found in the {@link #MainKeyboardView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:keyPreviewBackground
     */
    public static final int MainKeyboardView_keyPreviewBackground=6;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#keyPreviewDismissAnimator}
     * attribute's value can be found in the {@link #MainKeyboardView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:keyPreviewDismissAnimator
     */
    public static final int MainKeyboardView_keyPreviewDismissAnimator=7;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#keyPreviewHeight}
     * attribute's value can be found in the {@link #MainKeyboardView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name rkr.simplekeyboard.inputmethod:keyPreviewHeight
     */
    public static final int MainKeyboardView_keyPreviewHeight=8;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#keyPreviewLingerTimeout}
     * attribute's value can be found in the {@link #MainKeyboardView} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:keyPreviewLingerTimeout
     */
    public static final int MainKeyboardView_keyPreviewLingerTimeout=9;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#keyPreviewOffset}
     * attribute's value can be found in the {@link #MainKeyboardView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name rkr.simplekeyboard.inputmethod:keyPreviewOffset
     */
    public static final int MainKeyboardView_keyPreviewOffset=10;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#keyRepeatInterval}
     * attribute's value can be found in the {@link #MainKeyboardView} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:keyRepeatInterval
     */
    public static final int MainKeyboardView_keyRepeatInterval=11;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#keyRepeatStartTimeout}
     * attribute's value can be found in the {@link #MainKeyboardView} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:keyRepeatStartTimeout
     */
    public static final int MainKeyboardView_keyRepeatStartTimeout=12;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#keySelectionByDraggingFinger}
     * attribute's value can be found in the {@link #MainKeyboardView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:keySelectionByDraggingFinger
     */
    public static final int MainKeyboardView_keySelectionByDraggingFinger=13;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#languageOnSpacebarFadeoutAnimator}
     * attribute's value can be found in the {@link #MainKeyboardView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:languageOnSpacebarFadeoutAnimator
     */
    public static final int MainKeyboardView_languageOnSpacebarFadeoutAnimator=14;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#languageOnSpacebarFinalAlpha}
     * attribute's value can be found in the {@link #MainKeyboardView} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:languageOnSpacebarFinalAlpha
     */
    public static final int MainKeyboardView_languageOnSpacebarFinalAlpha=15;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#languageOnSpacebarTextColor}
     * attribute's value can be found in the {@link #MainKeyboardView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:languageOnSpacebarTextColor
     */
    public static final int MainKeyboardView_languageOnSpacebarTextColor=16;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#languageOnSpacebarTextRatio}
     * attribute's value can be found in the {@link #MainKeyboardView} array.
     *
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name rkr.simplekeyboard.inputmethod:languageOnSpacebarTextRatio
     */
    public static final int MainKeyboardView_languageOnSpacebarTextRatio=17;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#longPressShiftLockTimeout}
     * attribute's value can be found in the {@link #MainKeyboardView} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:longPressShiftLockTimeout
     */
    public static final int MainKeyboardView_longPressShiftLockTimeout=18;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#moreKeysKeyboardLayout}
     * attribute's value can be found in the {@link #MainKeyboardView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:moreKeysKeyboardLayout
     */
    public static final int MainKeyboardView_moreKeysKeyboardLayout=19;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#showMoreKeysKeyboardAtTouchedPoint}
     * attribute's value can be found in the {@link #MainKeyboardView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:showMoreKeysKeyboardAtTouchedPoint
     */
    public static final int MainKeyboardView_showMoreKeysKeyboardAtTouchedPoint=20;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#slidingKeyInputPreviewBodyRatio}
     * attribute's value can be found in the {@link #MainKeyboardView} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:slidingKeyInputPreviewBodyRatio
     */
    public static final int MainKeyboardView_slidingKeyInputPreviewBodyRatio=21;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#slidingKeyInputPreviewColor}
     * attribute's value can be found in the {@link #MainKeyboardView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:slidingKeyInputPreviewColor
     */
    public static final int MainKeyboardView_slidingKeyInputPreviewColor=22;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#slidingKeyInputPreviewShadowRatio}
     * attribute's value can be found in the {@link #MainKeyboardView} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:slidingKeyInputPreviewShadowRatio
     */
    public static final int MainKeyboardView_slidingKeyInputPreviewShadowRatio=23;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#slidingKeyInputPreviewWidth}
     * attribute's value can be found in the {@link #MainKeyboardView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name rkr.simplekeyboard.inputmethod:slidingKeyInputPreviewWidth
     */
    public static final int MainKeyboardView_slidingKeyInputPreviewWidth=24;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#touchNoiseThresholdDistance}
     * attribute's value can be found in the {@link #MainKeyboardView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name rkr.simplekeyboard.inputmethod:touchNoiseThresholdDistance
     */
    public static final int MainKeyboardView_touchNoiseThresholdDistance=25;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#touchNoiseThresholdTime}
     * attribute's value can be found in the {@link #MainKeyboardView} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:touchNoiseThresholdTime
     */
    public static final int MainKeyboardView_touchNoiseThresholdTime=26;
    public static final int[] MoreKeysKeyboardView={
    };
    /**
     * Attributes that can be used with a SeekBarDialogPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SeekBarDialogPreference_maxValue rkr.simplekeyboard.inputmethod:maxValue}</code></td><td></td></tr>
     * <tr><td><code>{@link #SeekBarDialogPreference_minValue rkr.simplekeyboard.inputmethod:minValue}</code></td><td></td></tr>
     * <tr><td><code>{@link #SeekBarDialogPreference_stepValue rkr.simplekeyboard.inputmethod:stepValue}</code></td><td></td></tr>
     * </table>
     * @see #SeekBarDialogPreference_maxValue
     * @see #SeekBarDialogPreference_minValue
     * @see #SeekBarDialogPreference_stepValue
     */
    public static final int[] SeekBarDialogPreference={
      0x7f030064, 0x7f030065, 0x7f03007a
    };
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#maxValue}
     * attribute's value can be found in the {@link #SeekBarDialogPreference} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:maxValue
     */
    public static final int SeekBarDialogPreference_maxValue=0;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#minValue}
     * attribute's value can be found in the {@link #SeekBarDialogPreference} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:minValue
     */
    public static final int SeekBarDialogPreference_minValue=1;
    /**
     * <p>This symbol is the offset where the {@link rkr.simplekeyboard.inputmethod.R.attr#stepValue}
     * attribute's value can be found in the {@link #SeekBarDialogPreference} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name rkr.simplekeyboard.inputmethod:stepValue
     */
    public static final int SeekBarDialogPreference_stepValue=2;
  }
  public static final class xml {
    public static final int additional_subtype_settings=0x7f100000;
    public static final int kbd_abc=0x7f100001;
    public static final int kbd_arabic=0x7f100002;
    public static final int kbd_armenian_phonetic=0x7f100003;
    public static final int kbd_azerty=0x7f100004;
    public static final int kbd_bengali=0x7f100005;
    public static final int kbd_bengali_akkhor=0x7f100006;
    public static final int kbd_bulgarian=0x7f100007;
    public static final int kbd_bulgarian_bds=0x7f100008;
    public static final int kbd_colemak=0x7f100009;
    public static final int kbd_dvorak=0x7f10000a;
    public static final int kbd_east_slavic=0x7f10000b;
    public static final int kbd_farsi=0x7f10000c;
    public static final int kbd_georgian=0x7f10000d;
    public static final int kbd_greek=0x7f10000e;
    public static final int kbd_hebrew=0x7f10000f;
    public static final int kbd_hindi=0x7f100010;
    public static final int kbd_hindi_compact=0x7f100011;
    public static final int kbd_kannada=0x7f100012;
    public static final int kbd_khmer=0x7f100013;
    public static final int kbd_lao=0x7f100014;
    public static final int kbd_malayalam=0x7f100015;
    public static final int kbd_marathi=0x7f100016;
    public static final int kbd_mongolian=0x7f100017;
    public static final int kbd_more_keys_keyboard_template=0x7f100018;
    public static final int kbd_nepali_romanized=0x7f100019;
    public static final int kbd_nepali_traditional=0x7f10001a;
    public static final int kbd_nordic=0x7f10001b;
    public static final int kbd_number=0x7f10001c;
    public static final int kbd_pcqwerty=0x7f10001d;
    public static final int kbd_phone=0x7f10001e;
    public static final int kbd_phone_symbols=0x7f10001f;
    public static final int kbd_qwerty=0x7f100020;
    public static final int kbd_qwertz=0x7f100021;
    public static final int kbd_serbian_qwertz=0x7f100022;
    public static final int kbd_south_slavic=0x7f100023;
    public static final int kbd_spanish=0x7f100024;
    public static final int kbd_swiss=0x7f100025;
    public static final int kbd_symbols=0x7f100026;
    public static final int kbd_symbols_shift=0x7f100027;
    public static final int kbd_tamil=0x7f100028;
    public static final int kbd_telugu=0x7f100029;
    public static final int kbd_thai=0x7f10002a;
    public static final int kbd_urdu=0x7f10002b;
    public static final int kbd_uzbek=0x7f10002c;
    public static final int key_armenian_sha=0x7f10002d;
    public static final int key_armenian_xeh=0x7f10002e;
    public static final int key_comma=0x7f10002f;
    public static final int key_period=0x7f100030;
    public static final int key_settings=0x7f100031;
    public static final int key_space_5kw=0x7f100032;
    public static final int key_space_7kw=0x7f100033;
    public static final int key_space_symbols=0x7f100034;
    public static final int key_styles_actions=0x7f100035;
    public static final int key_styles_common=0x7f100036;
    public static final int key_styles_currency=0x7f100037;
    public static final int key_styles_currency_dollar=0x7f100038;
    public static final int key_styles_currency_euro=0x7f100039;
    public static final int key_styles_currency_generic=0x7f10003a;
    public static final int key_styles_enter=0x7f10003b;
    public static final int key_styles_less_greater=0x7f10003c;
    public static final int key_styles_number=0x7f10003d;
    public static final int key_styles_settings=0x7f10003e;
    public static final int key_thai_kho_khuat=0x7f10003f;
    public static final int keyboard_layout_set_abc=0x7f100040;
    public static final int keyboard_layout_set_arabic=0x7f100041;
    public static final int keyboard_layout_set_armenian_phonetic=0x7f100042;
    public static final int keyboard_layout_set_azerty=0x7f100043;
    public static final int keyboard_layout_set_bengali=0x7f100044;
    public static final int keyboard_layout_set_bengali_akkhor=0x7f100045;
    public static final int keyboard_layout_set_bulgarian=0x7f100046;
    public static final int keyboard_layout_set_bulgarian_bds=0x7f100047;
    public static final int keyboard_layout_set_colemak=0x7f100048;
    public static final int keyboard_layout_set_dvorak=0x7f100049;
    public static final int keyboard_layout_set_east_slavic=0x7f10004a;
    public static final int keyboard_layout_set_farsi=0x7f10004b;
    public static final int keyboard_layout_set_georgian=0x7f10004c;
    public static final int keyboard_layout_set_greek=0x7f10004d;
    public static final int keyboard_layout_set_hebrew=0x7f10004e;
    public static final int keyboard_layout_set_hindi=0x7f10004f;
    public static final int keyboard_layout_set_hindi_compact=0x7f100050;
    public static final int keyboard_layout_set_kannada=0x7f100051;
    public static final int keyboard_layout_set_khmer=0x7f100052;
    public static final int keyboard_layout_set_lao=0x7f100053;
    public static final int keyboard_layout_set_malayalam=0x7f100054;
    public static final int keyboard_layout_set_marathi=0x7f100055;
    public static final int keyboard_layout_set_mongolian=0x7f100056;
    public static final int keyboard_layout_set_nepali_romanized=0x7f100057;
    public static final int keyboard_layout_set_nepali_traditional=0x7f100058;
    public static final int keyboard_layout_set_nordic=0x7f100059;
    public static final int keyboard_layout_set_pcqwerty=0x7f10005a;
    public static final int keyboard_layout_set_qwerty=0x7f10005b;
    public static final int keyboard_layout_set_qwertz=0x7f10005c;
    public static final int keyboard_layout_set_serbian_qwertz=0x7f10005d;
    public static final int keyboard_layout_set_south_slavic=0x7f10005e;
    public static final int keyboard_layout_set_spanish=0x7f10005f;
    public static final int keyboard_layout_set_swiss=0x7f100060;
    public static final int keyboard_layout_set_tamil=0x7f100061;
    public static final int keyboard_layout_set_telugu=0x7f100062;
    public static final int keyboard_layout_set_thai=0x7f100063;
    public static final int keyboard_layout_set_urdu=0x7f100064;
    public static final int keyboard_layout_set_uzbek=0x7f100065;
    public static final int keys_arabic3_left=0x7f100066;
    public static final int keys_curly_brackets=0x7f100067;
    public static final int keys_dvorak_123=0x7f100068;
    public static final int keys_exclamation_question=0x7f100069;
    public static final int keys_farsi3_right=0x7f10006a;
    public static final int keys_parentheses=0x7f10006b;
    public static final int keys_pcqwerty2_right3=0x7f10006c;
    public static final int keys_pcqwerty3_right2=0x7f10006d;
    public static final int keys_pcqwerty4_right3=0x7f10006e;
    public static final int keys_square_brackets=0x7f10006f;
    public static final int keystyle_devanagari_sign_anusvara=0x7f100070;
    public static final int keystyle_devanagari_sign_candrabindu=0x7f100071;
    public static final int keystyle_devanagari_sign_nukta=0x7f100072;
    public static final int keystyle_devanagari_sign_virama=0x7f100073;
    public static final int keystyle_devanagari_sign_visarga=0x7f100074;
    public static final int keystyle_devanagari_vowel_sign_aa=0x7f100075;
    public static final int keystyle_devanagari_vowel_sign_ai=0x7f100076;
    public static final int keystyle_devanagari_vowel_sign_au=0x7f100077;
    public static final int keystyle_devanagari_vowel_sign_candra_e=0x7f100078;
    public static final int keystyle_devanagari_vowel_sign_candra_o=0x7f100079;
    public static final int keystyle_devanagari_vowel_sign_e=0x7f10007a;
    public static final int keystyle_devanagari_vowel_sign_i=0x7f10007b;
    public static final int keystyle_devanagari_vowel_sign_ii=0x7f10007c;
    public static final int keystyle_devanagari_vowel_sign_o=0x7f10007d;
    public static final int keystyle_devanagari_vowel_sign_u=0x7f10007e;
    public static final int keystyle_devanagari_vowel_sign_uu=0x7f10007f;
    public static final int keystyle_devanagari_vowel_sign_vocalic_r=0x7f100080;
    public static final int method=0x7f100081;
    public static final int prefs=0x7f100082;
    public static final int prefs_screen_advanced=0x7f100083;
    public static final int prefs_screen_appearance=0x7f100084;
    public static final int prefs_screen_preferences=0x7f100085;
    public static final int prefs_screen_theme=0x7f100086;
    public static final int row_pcqwerty5=0x7f100087;
    public static final int row_qwerty4=0x7f100088;
    public static final int row_symbols4=0x7f100089;
    public static final int row_symbols_shift4=0x7f10008a;
    public static final int rowkeys_abc1=0x7f10008b;
    public static final int rowkeys_abc2=0x7f10008c;
    public static final int rowkeys_abc3=0x7f10008d;
    public static final int rowkeys_arabic1=0x7f10008e;
    public static final int rowkeys_arabic2=0x7f10008f;
    public static final int rowkeys_arabic3=0x7f100090;
    public static final int rowkeys_armenian_phonetic1=0x7f100091;
    public static final int rowkeys_armenian_phonetic2=0x7f100092;
    public static final int rowkeys_armenian_phonetic3=0x7f100093;
    public static final int rowkeys_armenian_phonetic4=0x7f100094;
    public static final int rowkeys_azerty1=0x7f100095;
    public static final int rowkeys_azerty2=0x7f100096;
    public static final int rowkeys_azerty3=0x7f100097;
    public static final int rowkeys_bengali1=0x7f100098;
    public static final int rowkeys_bengali2=0x7f100099;
    public static final int rowkeys_bengali3=0x7f10009a;
    public static final int rowkeys_bengali_akkhor1=0x7f10009b;
    public static final int rowkeys_bengali_akkhor2=0x7f10009c;
    public static final int rowkeys_bengali_akkhor3=0x7f10009d;
    public static final int rowkeys_bulgarian1=0x7f10009e;
    public static final int rowkeys_bulgarian2=0x7f10009f;
    public static final int rowkeys_bulgarian3=0x7f1000a0;
    public static final int rowkeys_bulgarian_bds1=0x7f1000a1;
    public static final int rowkeys_bulgarian_bds2=0x7f1000a2;
    public static final int rowkeys_bulgarian_bds3=0x7f1000a3;
    public static final int rowkeys_colemak1=0x7f1000a4;
    public static final int rowkeys_colemak2=0x7f1000a5;
    public static final int rowkeys_colemak3=0x7f1000a6;
    public static final int rowkeys_dvorak1=0x7f1000a7;
    public static final int rowkeys_dvorak2=0x7f1000a8;
    public static final int rowkeys_dvorak3=0x7f1000a9;
    public static final int rowkeys_east_slavic1=0x7f1000aa;
    public static final int rowkeys_east_slavic2=0x7f1000ab;
    public static final int rowkeys_east_slavic3=0x7f1000ac;
    public static final int rowkeys_farsi1=0x7f1000ad;
    public static final int rowkeys_farsi2=0x7f1000ae;
    public static final int rowkeys_farsi3=0x7f1000af;
    public static final int rowkeys_georgian1=0x7f1000b0;
    public static final int rowkeys_georgian2=0x7f1000b1;
    public static final int rowkeys_georgian3=0x7f1000b2;
    public static final int rowkeys_greek1=0x7f1000b3;
    public static final int rowkeys_greek2=0x7f1000b4;
    public static final int rowkeys_greek3=0x7f1000b5;
    public static final int rowkeys_hebrew1=0x7f1000b6;
    public static final int rowkeys_hebrew2=0x7f1000b7;
    public static final int rowkeys_hebrew3=0x7f1000b8;
    public static final int rowkeys_hindi1=0x7f1000b9;
    public static final int rowkeys_hindi2=0x7f1000ba;
    public static final int rowkeys_hindi3=0x7f1000bb;
    public static final int rowkeys_hindi_compact1=0x7f1000bc;
    public static final int rowkeys_hindi_compact2=0x7f1000bd;
    public static final int rowkeys_hindi_compact3=0x7f1000be;
    public static final int rowkeys_kannada1=0x7f1000bf;
    public static final int rowkeys_kannada2=0x7f1000c0;
    public static final int rowkeys_kannada3=0x7f1000c1;
    public static final int rowkeys_khmer1=0x7f1000c2;
    public static final int rowkeys_khmer2=0x7f1000c3;
    public static final int rowkeys_khmer3=0x7f1000c4;
    public static final int rowkeys_khmer4=0x7f1000c5;
    public static final int rowkeys_lao1=0x7f1000c6;
    public static final int rowkeys_lao2=0x7f1000c7;
    public static final int rowkeys_lao3=0x7f1000c8;
    public static final int rowkeys_lao4=0x7f1000c9;
    public static final int rowkeys_malayalam1=0x7f1000ca;
    public static final int rowkeys_malayalam2=0x7f1000cb;
    public static final int rowkeys_malayalam3=0x7f1000cc;
    public static final int rowkeys_marathi1=0x7f1000cd;
    public static final int rowkeys_marathi2=0x7f1000ce;
    public static final int rowkeys_marathi3=0x7f1000cf;
    public static final int rowkeys_mongolian1=0x7f1000d0;
    public static final int rowkeys_mongolian2=0x7f1000d1;
    public static final int rowkeys_mongolian3=0x7f1000d2;
    public static final int rowkeys_nepali_romanized1=0x7f1000d3;
    public static final int rowkeys_nepali_romanized2=0x7f1000d4;
    public static final int rowkeys_nepali_romanized3=0x7f1000d5;
    public static final int rowkeys_nepali_traditional1=0x7f1000d6;
    public static final int rowkeys_nepali_traditional2=0x7f1000d7;
    public static final int rowkeys_nepali_traditional3=0x7f1000d8;
    public static final int rowkeys_nordic1=0x7f1000d9;
    public static final int rowkeys_nordic2=0x7f1000da;
    public static final int rowkeys_pcqwerty1=0x7f1000db;
    public static final int rowkeys_pcqwerty1_shift=0x7f1000dc;
    public static final int rowkeys_pcqwerty2=0x7f1000dd;
    public static final int rowkeys_pcqwerty3=0x7f1000de;
    public static final int rowkeys_pcqwerty4=0x7f1000df;
    public static final int rowkeys_qwerty0=0x7f1000e0;
    public static final int rowkeys_qwerty1=0x7f1000e1;
    public static final int rowkeys_qwerty2=0x7f1000e2;
    public static final int rowkeys_qwerty3=0x7f1000e3;
    public static final int rowkeys_qwertz1=0x7f1000e4;
    public static final int rowkeys_qwertz3=0x7f1000e5;
    public static final int rowkeys_serbian_qwertz1=0x7f1000e6;
    public static final int rowkeys_serbian_qwertz2=0x7f1000e7;
    public static final int rowkeys_serbian_qwertz3=0x7f1000e8;
    public static final int rowkeys_south_slavic1=0x7f1000e9;
    public static final int rowkeys_south_slavic2=0x7f1000ea;
    public static final int rowkeys_south_slavic3=0x7f1000eb;
    public static final int rowkeys_spanish2=0x7f1000ec;
    public static final int rowkeys_swiss1=0x7f1000ed;
    public static final int rowkeys_swiss2=0x7f1000ee;
    public static final int rowkeys_symbols1=0x7f1000ef;
    public static final int rowkeys_symbols2=0x7f1000f0;
    public static final int rowkeys_symbols3=0x7f1000f1;
    public static final int rowkeys_symbols_shift1=0x7f1000f2;
    public static final int rowkeys_symbols_shift2=0x7f1000f3;
    public static final int rowkeys_symbols_shift3=0x7f1000f4;
    public static final int rowkeys_tamil1=0x7f1000f5;
    public static final int rowkeys_tamil2=0x7f1000f6;
    public static final int rowkeys_tamil3=0x7f1000f7;
    public static final int rowkeys_telugu1=0x7f1000f8;
    public static final int rowkeys_telugu2=0x7f1000f9;
    public static final int rowkeys_telugu3=0x7f1000fa;
    public static final int rowkeys_thai1=0x7f1000fb;
    public static final int rowkeys_thai2=0x7f1000fc;
    public static final int rowkeys_thai3=0x7f1000fd;
    public static final int rowkeys_thai4=0x7f1000fe;
    public static final int rowkeys_urdu1=0x7f1000ff;
    public static final int rowkeys_urdu2=0x7f100100;
    public static final int rowkeys_urdu3=0x7f100101;
    public static final int rowkeys_uzbek1=0x7f100102;
    public static final int rowkeys_uzbek2=0x7f100103;
    public static final int rows_abc=0x7f100104;
    public static final int rows_arabic=0x7f100105;
    public static final int rows_armenian_phonetic=0x7f100106;
    public static final int rows_azerty=0x7f100107;
    public static final int rows_bengali=0x7f100108;
    public static final int rows_bengali_akkhor=0x7f100109;
    public static final int rows_bulgarian=0x7f10010a;
    public static final int rows_bulgarian_bds=0x7f10010b;
    public static final int rows_colemak=0x7f10010c;
    public static final int rows_dvorak=0x7f10010d;
    public static final int rows_east_slavic=0x7f10010e;
    public static final int rows_farsi=0x7f10010f;
    public static final int rows_georgian=0x7f100110;
    public static final int rows_greek=0x7f100111;
    public static final int rows_hebrew=0x7f100112;
    public static final int rows_hindi=0x7f100113;
    public static final int rows_hindi_compact=0x7f100114;
    public static final int rows_kannada=0x7f100115;
    public static final int rows_khmer=0x7f100116;
    public static final int rows_lao=0x7f100117;
    public static final int rows_malayalam=0x7f100118;
    public static final int rows_marathi=0x7f100119;
    public static final int rows_mongolian=0x7f10011a;
    public static final int rows_nepali_romanized=0x7f10011b;
    public static final int rows_nepali_traditional=0x7f10011c;
    public static final int rows_nordic=0x7f10011d;
    public static final int rows_number=0x7f10011e;
    public static final int rows_number_normal=0x7f10011f;
    public static final int rows_number_password=0x7f100120;
    public static final int rows_pcqwerty=0x7f100121;
    public static final int rows_phone=0x7f100122;
    public static final int rows_phone_symbols=0x7f100123;
    public static final int rows_qwerty=0x7f100124;
    public static final int rows_qwertz=0x7f100125;
    public static final int rows_serbian_qwertz=0x7f100126;
    public static final int rows_south_slavic=0x7f100127;
    public static final int rows_spanish=0x7f100128;
    public static final int rows_swiss=0x7f100129;
    public static final int rows_symbols=0x7f10012a;
    public static final int rows_symbols_shift=0x7f10012b;
    public static final int rows_tamil=0x7f10012c;
    public static final int rows_telugu=0x7f10012d;
    public static final int rows_thai=0x7f10012e;
    public static final int rows_urdu=0x7f10012f;
    public static final int rows_uzbek=0x7f100130;
  }
}